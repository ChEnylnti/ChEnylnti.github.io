[{"title":"完美的代价","date":"2021-01-24T08:33:54.242Z","url":"/2021/01/24/%E5%AE%8C%E7%BE%8E%E7%9A%84%E4%BB%A3%E4%BB%B7/","tags":[["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["基础","/tags/%E5%9F%BA%E7%A1%80/"],["贪心算法","/tags/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["练习题","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"],["基础练习","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"]]},{"title":"矩形面积交","date":"2021-01-23T13:41:31.770Z","url":"/2021/01/23/%E7%9F%A9%E5%BD%A2%E9%9D%A2%E7%A7%AF%E4%BA%A4/","tags":[["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["基础","/tags/%E5%9F%BA%E7%A1%80/"],["判断","/tags/%E5%88%A4%E6%96%AD/"],["线段交","/tags/%E7%BA%BF%E6%AE%B5%E4%BA%A4/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["练习题","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"],["基础练习","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"]],"content":"题目描述：平面上有两个矩形，它们的边平行于直角坐标系的X轴或Y轴。对于每个矩形，我们给出它的一对相对顶点的坐标，请你编程算出两个矩形的交的面积。 资源限制：时间限制：1.0s 内存限制：512.0MB 输入格式：输入仅包含两行，每行描述一个矩形。在每行中，给出矩形的一对相对顶点的坐标，每个点的坐标都用两个绝对值不超过10^7的实数表示。 输出格式：输出仅包含一个实数，为交的面积，保留到小数后两位。 样例输入：1 1 3 32 2 4 4 样例输出：1.00 分析：本题的意思是打出两个矩形的对角顶点坐标，通过顶点坐标来确定一个矩形，如图 由图可得知顶点bc组成的矩形的面积是所求的面积，可以看出b点是两个下顶点中较大的一个，c点是较小的一个，但情况不止这一种，如下图 由此图得知，点b不是两个下顶点中的任意一个，而是由两个下顶点中较大的横坐标和较大的纵坐标组成的，点c同理，故我们只要再设一个数组来储存符合要求的坐标即可。 但是，除了相交的情况还有不相交的情况， 则还需要几个if来判断。 以上都是在输入为下顶点加上顶点的情况下成立的，所以我们还要设置一个方法来判断是否输入的是下顶点加上顶点的格式，若不是则交换位置。 "},{"title":"矩阵乘法","date":"2021-01-22T09:38:25.141Z","url":"/2021/01/22/%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95/","tags":[["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["循环","/tags/%E5%BE%AA%E7%8E%AF/"],["基础","/tags/%E5%9F%BA%E7%A1%80/"],["二维数组","/tags/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84/"],["矩阵","/tags/%E7%9F%A9%E9%98%B5/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["练习题","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"],["基础练习","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"]],"content":"问题描述：给定一个N阶矩阵A，输出A的M次幂（M是非负整数） 例如： A = 1 2 3 4 A的2次幂 7 10 15 22 资源限制：时间限制：1.0s 内存限制：512.0MB 输入格式：第一行是一个正整数N、M（1&lt;=N&lt;=30, 0&lt;=M&lt;=5），表示矩阵A的阶数和要求的幂数 接下来N行，每行N个绝对值不超过10的非负整数，描述矩阵A的值 输出格式：输出共N行，每行N个整数，表示A的M次幂所对应的矩阵。相邻的数之间用一个空格隔开 样例输入：2 21 23 4 样例输出：7 1015 22 分析：写这一题之前，先得学会矩阵乘法， 然后我们定义一个存放原始矩阵的数组，再定义一个用与存放结果的数组，然后开始循环，因为一个矩阵的零次幂一定是单位矩阵，而且已经将结果数组中加入了原始数组，这样幂等于一的时候也可以不用加入循环，故，只要从幂为二时开始循环 "},{"title":"分解质因数","date":"2021-01-22T06:11:56.814Z","url":"/2021/01/22/%E5%88%86%E8%A7%A3%E8%B4%A8%E5%9B%A0%E6%95%B0/","tags":[["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["循环","/tags/%E5%BE%AA%E7%8E%AF/"],["基础","/tags/%E5%9F%BA%E7%A1%80/"],["质数分解","/tags/%E8%B4%A8%E6%95%B0%E5%88%86%E8%A7%A3/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["练习题","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"],["基础练习","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"]],"content":"问题描述：求出区间[a,b]中所有整数的质因数分解。 资源限制：时间限制：1.0s 内存限制：512.0MB 输入格式：输入两个整数a，b。 输出格式：每行输出一个数的分解，形如k=a1a2a3…(a1&lt;=a2&lt;=a3…，k也是从小到大的)(具体可看样例) 样例输入：3 10 样例输出：3=34=225=56=237=78=2229=3310=25 提示：先筛出所有素数，然后再分解。 数据规模和约定：2&lt;=a&lt;=b&lt;=10000 分析：先定义了一个用于判断是不是素数的方法，如果是素数就可以直接输出了（不定义这玩意好像也无所谓），再定义一个方法用于分解素数，思路如下：如果这个数刚好能被i整除那么打印这个数加*再将这个数除i进入下一次递归，若不是因子则使i加一进入下一次递归，若这个数等于i，则直接输出这个数不用输出乘号。 "},{"title":"十六进制转八进制(误)","date":"2021-01-22T05:35:47.366Z","url":"/2021/01/22/%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E8%BD%AC%E5%85%AB%E8%BF%9B%E5%88%B6/","tags":[["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["循环","/tags/%E5%BE%AA%E7%8E%AF/"],["进制转换","/tags/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"],["基础","/tags/%E5%9F%BA%E7%A1%80/"],["字符处理","/tags/%E5%AD%97%E7%AC%A6%E5%A4%84%E7%90%86/"],["判断","/tags/%E5%88%A4%E6%96%AD/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["练习题","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"],["基础练习","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"]],"content":"问题描述：给定n个十六进制正整数，输出它们对应的八进制数。 资源限制：时间限制：1.0s 内存限制：512.0MB 输入格式：输入的第一行为一个正整数n （1&lt;=n&lt;=10）。 接下来n行，每行一个由09、大写字母AF组成的字符串，表示要转换的十六进制正整数，每个十六进制数长度不超过100000。 输出格式：输出n行，每行为输入对应的八进制正整数。 【注意】 输入的十六进制数不会有前导0，比如012A。 输出的八进制数也不能有前导0。 样例输入：​ 2 39 123ABC 样例输出：​ 71 4435274 【提示】 先将十六进制数转换成某进制数，再由某进制数转换成八进制。 分析：一看这题，以为就是把16进制转换成十进制再转换成八进制，还给了个提示，我寻思着这谁想不到呀，就开始写了，写完之后发现，嗯？ 这测试数据就离谱。我也意识到同类型最大的十六进制远比同类型最大的十进制要大得多，所以转化到十进制的时候必会溢出。于是我又去康了康别人写的怎么样。恍然大悟，可以用字符串来表示二进制一组一组的进行转化。先通过8421法转化成二进制再用421法转化为八进制。于是就有了下面的代码 测试了一下好像完全符合要求，结果。。。 我是sb"},{"title":"字符串对比","date":"2021-01-21T03:01:44.672Z","url":"/2021/01/21/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AF%B9%E6%AF%94/","tags":[["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["基础","/tags/%E5%9F%BA%E7%A1%80/"],["字符串","/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"],["大小写","/tags/%E5%A4%A7%E5%B0%8F%E5%86%99/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["练习题","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"],["基础练习","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"]],"content":"问题描述：给定两个仅由大写字母或小写字母组成的字符串(长度介于1到10之间)，它们之间的关系是以下4中情况之一： 1：两个字符串长度不等。比如 Beijing 和 Hebei 2：两个字符串不仅长度相等，而且相应位置上的字符完全一致(区分大小写)，比如 Beijing 和 Beijing 3：两个字符串长度相等，相应位置上的字符仅在不区分大小写的前提下才能达到完全一致（也就是说，它并不满足情况2）。比如 beijing 和 BEIjing 4：两个字符串长度相等，但是即使是不区分大小写也不能使这两个字符串一致。比如 Beijing 和 Nanjing 编程判断输入的两个字符串之间的关系属于这四类中的哪一类，给出所属的类的编号。 资源限制：时间限制：1.0s 内存限制：512.0MB 输入格式：包括两行，每行都是一个字符串 输出格式：仅有一个数字，表明这两个字符串的关系编号 样例输入：BEIjing beiJing 样例输出：3 分析："},{"title":"时间转换","date":"2021-01-21T02:45:56.251Z","url":"/2021/01/21/%E6%97%B6%E9%97%B4%E8%BD%AC%E6%8D%A2/","tags":[["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["基础","/tags/%E5%9F%BA%E7%A1%80/"],["取余","/tags/%E5%8F%96%E4%BD%99/"],["数字字符混合输出","/tags/%E6%95%B0%E5%AD%97%E5%AD%97%E7%AC%A6%E6%B7%B7%E5%90%88%E8%BE%93%E5%87%BA/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["练习题","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"],["基础练习","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"]],"content":"问题描述：给定一个以秒为单位的时间t，要求用“&lt;/H/&gt;:&lt;/M/&gt;:&lt;/S/&gt;”的格式来表示这个时间。&lt;/H/&gt;表示时间，&lt;/M/&gt;表示分钟，而&lt;/S/&gt;表示秒，它们都是整数且没有前导的“0”。例如，若t=0，则应输出是“0:0:0”；若t=3661，则输出“1:1:1”。 资源限制：时间限制：1.0s 内存限制：512.0MB 输入格式：输入只有一行，是一个整数t（0&lt;=t&lt;=86399）。 输出格式：输出只有一行，是以“&lt;/H/&gt;:&lt;/M/&gt;:&lt;/S/&gt;”的格式所表示的时间，不包括引号。 样例输入：0 样例输出：0:0:0 样例输入：5436 样例输出：1:30:36 分析："},{"title":"十六进制转十进制","date":"2021-01-19T07:40:45.604Z","url":"/2021/01/19/%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E8%BD%AC%E5%8D%81%E8%BF%9B%E5%88%B6/","tags":[["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["进制转换","/tags/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"],["基础","/tags/%E5%9F%BA%E7%A1%80/"],["字符处理","/tags/%E5%AD%97%E7%AC%A6%E5%A4%84%E7%90%86/"],["判断","/tags/%E5%88%A4%E6%96%AD/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["练习题","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"],["基础练习","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"]],"content":"问题描述：从键盘输入一个不超过8位的正的十六进制数字符串，将它转换为正的十进制数后输出。 注：十六进制数中的10~15分别用大写的英文字母A、B、C、D、E、F表示。 资源限制：时间限制：1.0s 内存限制：512.0MB 样例输入：FFFF 样例输出：65535 分析：把十进制转化为十六进制只需要把十进制数的n位乘16的n减一次方即可。把A转化为10则用了ASCII码的偏差值，A的ASCII码是65，所以只需要将ASCII码大于65的值减65加10就可得到十进制数。 "},{"title":"特殊回文数","date":"2021-01-18T15:33:11.440Z","url":"/2021/01/18/%E7%89%B9%E6%AE%8A%E5%9B%9E%E6%96%87%E6%95%B0/","tags":[["入门","/tags/%E5%85%A5%E9%97%A8/"],["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["循环","/tags/%E5%BE%AA%E7%8E%AF/"],["回文数","/tags/%E5%9B%9E%E6%96%87%E6%95%B0/"],["条件语句","/tags/%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["练习题","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"],["基础练习","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"]],"content":"问题描述：123321是一个非常特殊的数，它从左边读和从右边读是一样的。 输入一个正整数n， 编程求所有这样的五位和六位十进制数，满足各位数字之和等于n 。 资源限制：时间限制：1.0s 内存限制：512.0MB 输入格式：输入一行，包含一个正整数n。 输出格式：按从小到大的顺序输出满足条件的整数，每个整数占一行。 样例输入：52 样例输出：899998989989998899 数据规模和约定：1&lt;=n&lt;=54。 分析："},{"title":"回文数","date":"2021-01-18T15:13:57.362Z","url":"/2021/01/18/%E5%9B%9E%E6%96%87%E6%95%B0/","tags":[["入门","/tags/%E5%85%A5%E9%97%A8/"],["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["循环","/tags/%E5%BE%AA%E7%8E%AF/"],["判断","/tags/%E5%88%A4%E6%96%AD/"],["回文数","/tags/%E5%9B%9E%E6%96%87%E6%95%B0/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["练习题","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"],["基础练习","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"]],"content":"问题描述：1221是一个非常特殊的数，它从左边读和从右边读是一样的，编程求所有这样的四位十进制数。 资源限制：时间限制：1.0s 内存限制：512.0MB 输出格式：按从小到大的顺序输出满足条件的四位十进制数。 分析："},{"title":"特殊的数字","date":"2021-01-18T14:42:00.640Z","url":"/2021/01/18/%E7%89%B9%E6%AE%8A%E7%9A%84%E6%95%B0%E5%AD%97/","tags":[["入门","/tags/%E5%85%A5%E9%97%A8/"],["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["循环","/tags/%E5%BE%AA%E7%8E%AF/"],["判断","/tags/%E5%88%A4%E6%96%AD/"],["数位","/tags/%E6%95%B0%E4%BD%8D/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["练习题","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"],["基础练习","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"]],"content":"问题描述：153是一个非常特殊的数，它等于它的每位数字的立方和，即153=111+555+333。编程求所有满足这种条件的三位十进制数。 资源限制：时间限制：1.0s 内存限制：512.0MB 输出格式：按从小到大的顺序输出满足条件的三位十进制数，每个数占一行。 分析：通过分离个位、十位、百位可以很轻松得出答案 "},{"title":"杨辉三角","date":"2021-01-18T13:10:47.515Z","url":"/2021/01/18/%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92/","tags":[["入门","/tags/%E5%85%A5%E9%97%A8/"],["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["二维数组","/tags/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["练习题","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"],["基础练习","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"]],"content":"问题描述：杨辉三角形又称Pascal三角形，它的第i+1行是(a+b)i的展开式的系数。 它的一个重要性质是：三角形中的每个数字等于它两肩上的数字相加。 下面给出了杨辉三角形的前4行： 1 1 1 1 2 1 1 3 3 1 给出n，输出它的前n行。 资源限制：时间限制：1.0s 内存限制：256.0MB 输入格式：输入包含一个数n。 输出格式：输出杨辉三角形的前n行。每一行从这一行的第一个数开始依次输出，中间使用一个空格分隔。请不要在前面输出多余的空格。 样例输入：4 样例输出：11 11 2 11 3 3 1 数据规模与约定：1 &lt;= n &lt;= 34。 分析：首先定义一个二维数组，根据杨辉三角的规律，第n行有n个数，且每行的第一个和最后一个数都是1，第n行的第i个数字等于n-1行的i-1加上i "},{"title":"查找整数","date":"2021-01-18T08:55:52.549Z","url":"/2021/01/18/%E6%9F%A5%E6%89%BE%E6%95%B4%E6%95%B0/","tags":[["入门","/tags/%E5%85%A5%E9%97%A8/"],["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["循环","/tags/%E5%BE%AA%E7%8E%AF/"],["判断","/tags/%E5%88%A4%E6%96%AD/"],["多行输入","/tags/%E5%A4%9A%E8%A1%8C%E8%BE%93%E5%85%A5/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["练习题","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"],["基础练习","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"]],"content":"题目描述：给出一个包含n个整数的数列，问整数a在数列中的第一次出现是第几个。 资源限制：时间限制：1.0s 内存限制：256.0MB 输入格式：第一行包含一个整数n。 第二行包含n个非负整数，为给定的数列，数列中的每个数都不大于10000。 第三行包含一个整数a，为待查找的数。 输出格式：如果a在数列中出现了，输出它第一次出现的位置(位置从1开始编号)，否则输出-1。 样例输入：61 9 4 8 3 99 样例输出：2 数据规模与约定：1 &lt;= n &lt;= 1000。 分析："},{"title":"数列特征","date":"2021-01-18T08:12:48.225Z","url":"/2021/01/18/%E6%95%B0%E5%88%97%E7%89%B9%E5%BE%81/","tags":[["入门","/tags/%E5%85%A5%E9%97%A8/"],["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["循环","/tags/%E5%BE%AA%E7%8E%AF/"],["最大值","/tags/%E6%9C%80%E5%A4%A7%E5%80%BC/"],["最小值","/tags/%E6%9C%80%E5%B0%8F%E5%80%BC/"],["累加","/tags/%E7%B4%AF%E5%8A%A0/"],["多行输入","/tags/%E5%A4%9A%E8%A1%8C%E8%BE%93%E5%85%A5/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["练习题","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"],["基础练习","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"]],"content":"题目描述：给出n个数，找出这n个数的最大值，最小值，和。 资源限制：时间限制：1.0s 内存限制：256.0MB 输入格式：第一行为整数n，表示数的个数。 第二行有n个数，为给定的n个数，每个数的绝对值都小于10000。 输出格式：输出三行，每行一个整数。第一行表示这些数中的最大值，第二行表示这些数中的最小值，第三行表示这些数的和。 样例输入：51 3 -2 4 5 样例输出：5-211 数据规模与约定：1 &lt;= n &lt;= 10000。 分析：第一次见这题，不是因为题目的逻辑有多难，而是不知道怎么实现多行输入并且逐个处理。 "},{"title":"字母图形","date":"2021-01-17T15:03:11.121Z","url":"/2021/01/17/%E5%AD%97%E6%AF%8D%E5%9B%BE%E5%BD%A2/","tags":[["入门","/tags/%E5%85%A5%E9%97%A8/"],["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["循环","/tags/%E5%BE%AA%E7%8E%AF/"],["字符串","/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["练习题","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"],["基础练习","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"]],"content":"问题描述：利用字母可以组成一些美丽的图形，下面给出了一个例子： ABCDEFG BABCDEF CBABCDE DCBABCD EDCBABC 这是一个5行7列的图形，请找出这个图形的规律，并输出一个n行m列的图形。 资源限制：时间限制：1.0s 内存限制：256.0MB 输入格式：输入一行，包含两个整数n和m，分别表示你要输出的图形的行数的列数。 输出格式：输出n行，每个m个字符，为你的图形。 样例输入：5 7 样例输出：ABCDEFGBABCDEFCBABCDEDCBABCDEDCBABC 数据规模与约定：1 &lt;= n, m &lt;= 26。 分析：这题就是一个找规律的题，先设一个char为65来表示A，接下来我们就可以通过对char的加减来实现字母的变化，我们再设一个外层循环来设定要打印的行数，然后这个外层循环内有两个内部循环，第一个内部循环是打印A之前的数的，比如第一行从A开始，这个内层循环就不需要打印，第二行A的前面有B，所以要输出B。第二个循环则是输出从A开始列数减第一个循环输出的个数。 因为第一层循环的偏移量和列数的循环是相等的，也就是说输出第零行的时候偏移量也是零不用输出，当然也不能大于列数。"},{"title":"01字串","date":"2021-01-16T15:56:06.135Z","url":"/2021/01/16/01%E5%AD%97%E4%B8%B2/","tags":[["入门","/tags/%E5%85%A5%E9%97%A8/"],["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["循环","/tags/%E5%BE%AA%E7%8E%AF/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["练习题","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"],["基础练习","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"]],"content":"问题描述：对于长度为5位的一个01串，每一位都可能是0或1，一共有32种可能。它们的前几个是： 00000 00001 00010 00011 00100 请按从小到大的顺序输出这32种01串。 资源限制：时间限制：1.0s 内存限制：256.0MB 输入格式：本题没有输入格式 输出格式：输出32行，按从小到大的顺序每行一个长度为5的01串。 样例输出：00000000010001000011&lt;以下部分省略&gt; 分析：这题只需要从0循环31次，再将他们的二进制输出即可 这个方法转化为二进制能选择保留的位数，原理是依次将最高位左移到最低位，再与1&amp;运算。"},{"title":"闰年判断","date":"2021-01-16T15:47:50.667Z","url":"/2021/01/16/%E9%97%B0%E5%B9%B4%E5%88%A4%E6%96%AD/","tags":[["入门","/tags/%E5%85%A5%E9%97%A8/"],["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["条件判断","/tags/%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["练习题","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"],["基础练习","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"]],"content":"问题描述：给定一个年份，判断这一年是不是闰年。 当以下情况之一满足时，这一年是闰年： \\1. 年份是4的倍数而不是100的倍数； \\2. 年份是400的倍数。 其他的年份都不是闰年。 资源限制：时间限制：1.0s 内存限制：256.0MB 输入格式：输入包含一个整数y，表示当前的年份。 输出格式：输出一行，如果给定的年份是闰年，则输出yes，否则输出no。 样例输入：2013 样例输出：no 样例输入：2016 样例输出：yes 数据规模与约定：1990 &lt;= y &lt;= 2050。 分析：只要判断x除以y是否为0，就可以知道x能不能被y整除了。 "},{"title":"圆的面积","date":"2021-01-16T14:31:20.256Z","url":"/2021/01/16/%E5%9C%86%E7%9A%84%E9%9D%A2%E7%A7%AF/","tags":[["入门","/tags/%E5%85%A5%E9%97%A8/"],["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["实数输出","/tags/%E5%AE%9E%E6%95%B0%E8%BE%93%E5%87%BA/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["练习题","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"],["入门训练","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%85%A5%E9%97%A8%E8%AE%AD%E7%BB%83/"]],"content":"题目描述：给定圆的半径r，求圆的面积。 资源限制：时间限制：1.0s 内存限制：256.0MB 输入格式：输入包含一个整数r，表示圆的半径。 输出格式：输出一行，包含一个实数，四舍五入保留小数点后7位，表示圆的面积。 样例输入：4 样例输出：50.2654825 数据规模与约定：1&lt;=r&lt;=10000 提示：本题对精度要求较高，请注意π的值应该取较精确的值。你可以使用常量来表示π，比如PI=3.14159265358979323，也可以使用数学公式来求π，比如PI=atan(1.0)*4。 分析：java中保留n为小数的写法为（不唯一） String.format(“%.nf”, x) n为保留的小数位，x必须为double类型。 "},{"title":"斐波那契数列","date":"2021-01-16T08:31:44.634Z","url":"/2021/01/16/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97/","tags":[["入门","/tags/%E5%85%A5%E9%97%A8/"],["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["数列","/tags/%E6%95%B0%E5%88%97/"],["取模","/tags/%E5%8F%96%E6%A8%A1/"],["递归","/tags/%E9%80%92%E5%BD%92/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["练习题","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"],["入门训练","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%85%A5%E9%97%A8%E8%AE%AD%E7%BB%83/"]],"content":"问题描述：Fibonacci数列的递推公式为：Fn=Fn-1+Fn-2，其中F1=F2=1。 当n比较大时，Fn也非常大，现在我们想知道，Fn除以10007的余数是多少。 资源限制：时间限制：1.0s 内存限制：256.0MB 输入格式：输入包含一个整数n。 输出格式：输出一行，包含一个整数，表示Fn除以10007的余数。 样例输入：10 样例输出：55 样例输入：22 样例输出：7704 数据规模与约定：1&lt;=n&lt;=1000000. 分析：方法一：定义一个数组长度为n的数组，把数组的第一位和第二位都设为1，再通过循环使数组从第三位开始的后一位等于前两位的合。 方法二：第二种方法用的是递归，从最上层递归下来，但是一旦运算的数字变大，递归算法的重复运算太多，因为算f(n-1)的时候要算f(n-3)，算f(n-2)的时候还要算f(n-3)，不符合题目的资源要求。 方法三：通过循环加交换变量的值就能得出 "},{"title":"一题三解：计算二进制中1的个数","date":"2021-01-15T09:26:28.679Z","url":"/2021/01/15/%E4%B8%80%E9%A2%98%E4%B8%89%E8%A7%A3%EF%BC%9A%E8%AE%A1%E7%AE%97%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%AD1%E7%9A%84%E4%B8%AA%E6%95%B0/","tags":[["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["位运算","/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["位运算的奇巧淫技","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E4%BD%8D%E8%BF%90%E7%AE%97%E7%9A%84%E5%A5%87%E5%B7%A7%E6%B7%AB%E6%8A%80/"]],"content":"题目描述：请实现一个函数，输入一个整数，输出该二进制表示中1的个数 例：9的二进制表示为1001，有2位是1 方案一：第一种方法：假设这个数是3，其二进制为011，首先将011&amp;001，判断得出来的结果是否等于001，如果等于，说明这个第1位是1；然后将 011&amp;010，判断得出来的结果是否等于010，如果等于，说明这个第2位是1，一直进行下去，判断31位 方案二：第二种方法：只让要测验的数向右移。假设这个数是3，其二进制为011，首先将011&amp;001，判断得出来的结果是否等于001，如果等于，说明这个 第1位是1；然后将001&amp;001，判断得出来的结果是否等于001，如果等于，说明这个第2位是1，一直进行下去，判断31位 方案三：第三种方法：还是假设这个数是3，那我们让3变成0的过程中肯定是要消掉1的，消掉多少次1，就表示3的二进制中有多少个1。关键就在于，如何 消掉011中的1，我们首先让011减1，那么011就变成了010，然后让011&amp;010，就得到了010，然后再让010减1，那么010就变成了001，然后让 010&amp;001，就得到了000，转换成伪代码的形式就是，a = (a - 1) &amp; a，它的效果就是消掉最低位上的1，依次消掉所有最低位上的1，最后不就变成了0吗 "},{"title":"题解：如何找数组中唯一成对的那个数","date":"2021-01-15T08:13:35.166Z","url":"/2021/01/15/%E9%A2%98%E8%A7%A3%EF%BC%9A%E5%A6%82%E4%BD%95%E6%89%BE%E6%95%B0%E7%BB%84%E4%B8%AD%E5%94%AF%E4%B8%80%E6%88%90%E5%AF%B9%E7%9A%84%E9%82%A3%E4%B8%AA%E6%95%B0/","tags":[["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["位运算","/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["位运算的奇巧淫技","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E4%BD%8D%E8%BF%90%E7%AE%97%E7%9A%84%E5%A5%87%E5%B7%A7%E6%B7%AB%E6%8A%80/"]],"content":"题目描述：1-1000这1000个数放在含有1001个元素的数组中，只有唯一的一个元素值重复，其他均只出现一次。每个数组元素只能访问一次，设计一个算法，将它找出来；不用辅助储存空间，能否设计一个算法实现？ 分析：根据a^a=0,a^0=a这两条性质，我们可以把数组中的元素全部异或起来，然后再异或一遍不重复的所有元素，就是(1^2^3^4^2)^(1^2^3^4)，这样把它们凑起来，最后结果就应该是2^2^2=2^0=2，正好是要找的重复元素 "},{"title":"回文字符串的判断","date":"2021-01-14T15:51:35.156Z","url":"/2021/01/14/%E5%9B%9E%E6%96%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%88%A4%E6%96%AD/","tags":[["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["算法基础","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/"]],"content":"概念： 设n是一任意自然数。若将n的各位数字反向排列所得自然数n1与n相等，则称n为一回文数。例如，若n=1234321，则称n为一回文数；但若n=1234567，则n不是回文数。 分析： 设置两个指针，一个从第一个开始，一个从后面开始，循环比较两个指针指向的字符是否相等 "},{"title":"找出距离最小的点对","date":"2021-01-14T13:41:10.443Z","url":"/2021/01/14/%E6%89%BE%E5%87%BA%E8%B7%9D%E7%A6%BB%E6%9C%80%E5%B0%8F%E7%9A%84%E7%82%B9%E5%AF%B9/","tags":[["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["算法基础","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/"]],"content":" 分析： 依次把每个点作为起点，计算和其余点的距离，保留更小的距离 "},{"title":"10进制数转16进制","date":"2021-01-12T06:53:17.983Z","url":"/2021/01/12/10%E8%BF%9B%E5%88%B6%E6%95%B0%E8%BD%AC16%E8%BF%9B%E5%88%B6/","tags":[["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["进制转换","/tags/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["算法基础","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/"],["进制转换","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"]],"content":"已知：十进制数123被转换为十六进制数7B。这个转换过程如下：将123除以16，余数为11（十六进制的B）商为7.继续将7除以16，余数为7，商为0.因此7B就是123的十六进制数。 "},{"title":"位运算","date":"2021-01-11T10:03:21.130Z","url":"/2021/01/11/%E4%BD%8D%E8%BF%90%E7%AE%97/","tags":[["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["位运算","/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["算法基础","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/"],["位运算","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E4%BD%8D%E8%BF%90%E7%AE%97/"]],"content":"位运算1.位运算概述 程序中的所有数在计算机内存中都是以二进制的形式储存的。位运算就是直接对整数在内存中的二进制位进行操作。比如，and运算本来是一个逻辑运算符，但整数与整数之间也可以进行and运算。举个例子，6的二进制是110，11的二进制是1011，那么6 and 11的结果就是2，它是二进制对应位进行逻辑运算的结果（0表示False，1表示True，空位都当0处理）。 110 AND 1011 0010 –&gt; 2 ——引用自百度 2.位运算运算符与运算(&amp;)把参加运算的数转化为二进制(不足的位补0)，按二进制位做逻辑上的与运算，1为true，0为false。 0&amp;0=0 0&amp;1=0 1&amp;0=0 1&amp;1=1 或运算(|)把参加运算的数转化为二进制(不足的位补0)，按二进制位做逻辑上的或运算，1为true，0为false。 0|0=0 0|1=1 1|0=1 1|1=1 异或运算(^)首先异或操作是对每一位都进行异或（相同为0，不同为1），但需要先把数转换成补码才行。 1、正数的补码即本身 2、负数的补码为各位取反然后加1（最高为保持为1不变） 把参加运算的数转化为二进制(不足的位补0)，两个数相同为0，相异为1。 0^0=0 0^1=1 1^0=1 1^1=0 异或的几条性质: 1、交换律 2、结合律 (a^b)^c == a^(b^c) 3、对于任何数x，都有 x^x=0，x^0=x 4、自反性: a^b^b=a^0=a; 取反运算(~)把参加运算的数转化为二进制(不足的位补0)，做逻辑上的取反。 ~1=0 ~0=1 左移运算(&lt;&lt;)把参加运算的数转化为二进制(不足的位补0)，左移若干位 (左边不要，右边补0)。 1010 &lt;&lt; 2 就是左移两位得到 1000 若左移时舍弃的高位补包含1，则每左移一位，相当于该数乘以2。 对于int型，1&lt;&lt;35与1&lt;&lt;3是相同的，因为int总共就32位，向左边移35位的时候会取模。 右移运算(&gt;&gt;)把参加运算的数转化为二进制(不足的位补0)，右移若干位 (正数左边补0，负数左边补1，右边不要)。 操作数右移一位，就相当于概述除以2。 右移运算(&gt;&gt;&gt;)把参加运算的数转化为二进制(不足的位补0)，右移若干位 (左边补0，右边不要)。 没有&lt;&lt;&lt;运算符3.例题把2变成8最高效的方式是什么2 &lt;&lt; 2=8 判断奇偶数二进制数的最后以为是1就是奇数，最后一位是0就是偶数，因为前面都是二的次方所以一定是偶数，所以只要判断最后一位就行了。 让被判断的数的最后的一位和1做与运算，结果为0就是偶数，为1就是奇数。 获取二进制位是1还是0(两种解决方案)方案一 求x的第5位 先让1左移4位得00010000，与x进行与运算，得到的结果再右移4位判断得到的是1还是0。 方案二 将x右移4位与1进行与运算 交换两个整数变量的值A=A^B B=A^B C=A^B 不用判断语句，求整数的绝对值负数的补码为各位取反然后加1(最高位保持为1不变) 先把要求的数设为A带符号往右移31位设为x，若A为正数那x就0，为负数则为-1(111111..第一个1表符号)，将A和x做异或运算，若A为正数那么运算结果就是自己，若A为负数结果则为~A(取反)，因为取反后还要加一，通过A&gt;&gt;&gt;31(结果为0或1)来决定要不要加一。 "},{"title":"Hello World","date":"2021-01-08T10:52:08.837Z","url":"/2021/01/08/hello-world/","tags":[["-意义不明","/tags/%E6%84%8F%E4%B9%89%E4%B8%8D%E6%98%8E/"]],"categories":[["意义不明","/categories/%E6%84%8F%E4%B9%89%E4%B8%8D%E6%98%8E/"]],"content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post More info: Writing Run server More info: Server Generate static files More info: Generating Deploy to remote sites More info: Deployment"}]