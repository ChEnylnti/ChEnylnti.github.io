[{"title":"题解：如何找数组中唯一成对的那个数","date":"2021-01-15T08:13:35.166Z","url":"/2021/01/15/%E9%A2%98%E8%A7%A3%EF%BC%9A%E5%A6%82%E4%BD%95%E6%89%BE%E6%95%B0%E7%BB%84%E4%B8%AD%E5%94%AF%E4%B8%80%E6%88%90%E5%AF%B9%E7%9A%84%E9%82%A3%E4%B8%AA%E6%95%B0/","tags":[["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["位运算","/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["位运算的奇巧淫技","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E4%BD%8D%E8%BF%90%E7%AE%97%E7%9A%84%E5%A5%87%E5%B7%A7%E6%B7%AB%E6%8A%80/"]],"content":"题目描述：1-1000这1000个数放在含有1001个元素的数组中，只有唯一的一个元素值重复，其他均只出现一次。每个数组元素只能访问一次，设计一个算法，将它找出来；不用辅助储存空间，能否设计一个算法实现？ 分析：根据a^a=0,a^0=a这两条性质，我们可以把数组中的元素全部异或起来，然后再异或一遍不重复的所有元素，就是(1^2^3^4^2)^(1^2^3^4)，这样把它们凑起来，最后结果就应该是2^2^2=2^0=2，正好是要找的重复元素 "},{"title":"回文字符串的判断","date":"2021-01-14T15:51:35.156Z","url":"/2021/01/14/%E5%9B%9E%E6%96%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%88%A4%E6%96%AD/","tags":[["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["算法基础","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/"]],"content":"概念： 设n是一任意自然数。若将n的各位数字反向排列所得自然数n1与n相等，则称n为一回文数。例如，若n=1234321，则称n为一回文数；但若n=1234567，则n不是回文数。 分析： 设置两个指针，一个从第一个开始，一个从后面开始，循环比较两个指针指向的字符是否相等 "},{"title":"找出距离最小的点对","date":"2021-01-14T13:41:10.443Z","url":"/2021/01/14/%E6%89%BE%E5%87%BA%E8%B7%9D%E7%A6%BB%E6%9C%80%E5%B0%8F%E7%9A%84%E7%82%B9%E5%AF%B9/","tags":[["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["算法基础","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/"]],"content":" 分析： 依次把每个点作为起点，计算和其余点的距离，保留更小的距离 "},{"title":"10进制数转16进制","date":"2021-01-12T06:53:17.983Z","url":"/2021/01/12/10%E8%BF%9B%E5%88%B6%E6%95%B0%E8%BD%AC16%E8%BF%9B%E5%88%B6/","tags":[["进制转换","/tags/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"],["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["算法基础","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/"],["进制转换","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"]],"content":"已知：十进制数123被转换为十六进制数7B。这个转换过程如下：将123除以16，余数为11（十六进制的B）商为7.继续将7除以16，余数为7，商为0.因此7B就是123的十六进制数。 "},{"title":"位运算","date":"2021-01-11T10:03:21.130Z","url":"/2021/01/11/%E4%BD%8D%E8%BF%90%E7%AE%97/","tags":[["算法","/tags/%E7%AE%97%E6%B3%95/"],["蓝桥杯","/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["位运算","/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"],["算法","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"],["java","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"],["蓝桥杯","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"],["算法基础","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/"],["位运算","/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/%E4%BD%8D%E8%BF%90%E7%AE%97/"]],"content":"位运算1.位运算概述 程序中的所有数在计算机内存中都是以二进制的形式储存的。位运算就是直接对整数在内存中的二进制位进行操作。比如，and运算本来是一个逻辑运算符，但整数与整数之间也可以进行and运算。举个例子，6的二进制是110，11的二进制是1011，那么6 and 11的结果就是2，它是二进制对应位进行逻辑运算的结果（0表示False，1表示True，空位都当0处理）。 110 AND 1011 0010 –&gt; 2 ——引用自百度 2.位运算运算符与运算(&amp;)把参加运算的数转化为二进制(不足的位补0)，按二进制位做逻辑上的与运算，1为true，0为false。 0&amp;0=0 0&amp;1=0 1&amp;0=0 1&amp;1=1 或运算(|)把参加运算的数转化为二进制(不足的位补0)，按二进制位做逻辑上的或运算，1为true，0为false。 0|0=0 0|1=1 1|0=1 1|1=1 异或运算(^)首先异或操作是对每一位都进行异或（相同为0，不同为1），但需要先把数转换成补码才行。 1、正数的补码即本身 2、负数的补码为各位取反然后加1（最高为保持为1不变） 把参加运算的数转化为二进制(不足的位补0)，两个数相同为0，相异为1。 0^0=0 0^1=1 1^0=1 1^1=0 异或的几条性质: 1、交换律 2、结合律 (a^b)^c == a^(b^c) 3、对于任何数x，都有 x^x=0，x^0=x 4、自反性: a^b^b=a^0=a; 取反运算(~)把参加运算的数转化为二进制(不足的位补0)，做逻辑上的取反。 ~1=0 ~0=1 左移运算(&lt;&lt;)把参加运算的数转化为二进制(不足的位补0)，左移若干位 (左边不要，右边补0)。 1010 &lt;&lt; 2 就是左移两位得到 1000 若左移时舍弃的高位补包含1，则每左移一位，相当于该数乘以2。 对于int型，1&lt;&lt;35与1&lt;&lt;3是相同的，因为int总共就32位，向左边移35位的时候会取模。 右移运算(&gt;&gt;)把参加运算的数转化为二进制(不足的位补0)，右移若干位 (正数左边补0，负数左边补1，右边不要)。 操作数右移一位，就相当于概述除以2。 右移运算(&gt;&gt;&gt;)把参加运算的数转化为二进制(不足的位补0)，右移若干位 (左边补0，右边不要)。 没有&lt;&lt;&lt;运算符3.例题把2变成8最高效的方式是什么2 &lt;&lt; 2=8 判断奇偶数二进制数的最后以为是1就是奇数，最后一位是0就是偶数，因为前面都是二的次方所以一定是偶数，所以只要判断最后一位就行了。 让被判断的数的最后的一位和1做与运算，结果为0就是偶数，为1就是奇数。 获取二进制位是1还是0(两种解决方案)方案一 求x的第5位 先让1左移4位得00010000，与x进行与运算，得到的结果再右移4位判断得到的是1还是0。 方案二 将x右移4位与1进行与运算 交换两个整数变量的值A=A^B B=A^B C=A^B 不用判断语句，求整数的绝对值负数的补码为各位取反然后加1(最高位保持为1不变) 先把要求的数设为A带符号往右移31位设为x，若A为正数那x就0，为负数则为-1(111111..第一个1表符号)，将A和x做异或运算，若A为正数那么运算结果就是自己，若A为负数结果则为~A(取反)，因为取反后还要加一，通过A&gt;&gt;&gt;31(结果为0或1)来决定要不要加一。 "},{"title":"Hello World","date":"2021-01-08T10:52:08.837Z","url":"/2021/01/08/hello-world/","tags":[["-意义不明","/tags/%E6%84%8F%E4%B9%89%E4%B8%8D%E6%98%8E/"]],"categories":[["意义不明","/categories/%E6%84%8F%E4%B9%89%E4%B8%8D%E6%98%8E/"]],"content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post More info: Writing Run server More info: Server Generate static files More info: Generating Deploy to remote sites More info: Deployment"}]