<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ChEnylnti</title>
  
  <subtitle>好耶~</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-02-18T14:16:02.935Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>ChEnylnti</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>旋转数组的最小数字(改造二分法)</title>
    <link href="http://example.com/2021/02/18/%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97(%E6%94%B9%E9%80%A0%E4%BA%8C%E5%88%86%E6%B3%95)/"/>
    <id>http://example.com/2021/02/18/%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97(%E6%94%B9%E9%80%A0%E4%BA%8C%E5%88%86%E6%B3%95)/</id>
    <published>2021-02-18T13:08:27.473Z</published>
    <updated>2021-02-18T14:16:02.935Z</updated>
    
    <content type="html"><![CDATA[<h1 id="旋转数组的最小数字-改造二分法"><a href="#旋转数组的最小数字-改造二分法" class="headerlink" title="旋转数组的最小数字(改造二分法)"></a>旋转数组的最小数字(改造二分法)</h1><h2 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h2><p>把一个数组最开始的若干个元素搬到数组的末尾,我们称之为数组的旋转。输入-一个递增排序的数组的一个旋转,输出旋转数组的最小元素。例如数组 {3,4,5,1,2}为{1,2,3,4,5}的一 个旋转,该数组的最小值为1</p><h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><p> 利用数组的有序性来提升算法的性能，旋转分开的两部分一定有一部分是有序的，通过观察，最小的数一定是在无序的那一边</p><p>递归到最后两个数的时候，最小的数一定是在右边</p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_</span>旋转数组最小值 </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> arr[])</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> be=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> end=arr.length-<span class="number">1</span>;</span><br><span class="line"><span class="comment">//没有旋转直接返回第一个</span></span><br><span class="line"><span class="keyword">if</span>(arr[be]&lt;arr[end])&#123;</span><br><span class="line"><span class="keyword">return</span> arr[be];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (be+<span class="number">1</span>&lt;end)&#123;</span><br><span class="line"><span class="keyword">int</span> mid=be+((end-be)&gt;&gt;<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(arr[mid]&gt;=arr[be])&#123;<span class="comment">//左边有序，最小值在右边（无序）</span></span><br><span class="line">be=mid;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">end=mid;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> arr[end];<span class="comment">//最后剩两个元素，右边的位最小值</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">System.out.println(f(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">3</span>&#125;));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>若中间的值和左边的值和右边的值相等比如1，0，1，1，1那么应该放弃这个算法，采用扫描法</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;旋转数组的最小数字-改造二分法&quot;&gt;&lt;a href=&quot;#旋转数组的最小数字-改造二分法&quot; class=&quot;headerlink&quot; title=&quot;旋转数组的最小数字(改造二分法)&quot;&gt;&lt;/a&gt;旋转数组的最小数字(改造二分法)&lt;/h1&gt;&lt;h2 id=&quot;问题描述：&quot;&gt;&lt;a h</summary>
      
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="算法" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"/>
    
    <category term="java" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="查找与排序" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E6%9F%A5%E6%89%BE%E4%B8%8E%E6%8E%92%E5%BA%8F/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="查找与排序" scheme="http://example.com/tags/%E6%9F%A5%E6%89%BE%E4%B8%8E%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>小白上楼梯(递归设计)</title>
    <link href="http://example.com/2021/02/18/%E5%B0%8F%E7%99%BD%E4%B8%8A%E6%A5%BC%E6%A2%AF(%E9%80%92%E5%BD%92%E8%AE%BE%E8%AE%A1)/"/>
    <id>http://example.com/2021/02/18/%E5%B0%8F%E7%99%BD%E4%B8%8A%E6%A5%BC%E6%A2%AF(%E9%80%92%E5%BD%92%E8%AE%BE%E8%AE%A1)/</id>
    <published>2021-02-18T12:14:59.084Z</published>
    <updated>2021-02-18T12:14:59.085Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h1><p>小白正在上楼梯，楼梯有n阶台阶，小白一次可以上1阶，2阶或者3阶，实现一个方法,计算小白有多少种走完楼梯的方式。</p><h1 id="提示："><a href="#提示：" class="headerlink" title="提示："></a>提示：</h1><p>设n阶台阶的走法数为f(n)。如果只有1个台阶，走法有1种（一步上1个台阶），即f(1)=1；如果有2个台阶，走法有2种（一种是上1阶，再上1 阶，另一种是一步上2阶），即f(2)=2；如果有3个台阶，走法有4种（一种每次1阶，共一种；另一种是2+1，共两种；第三种是3，共1种），即 f(3)=4； </p><p>当有n个台阶（n&gt;3）时，我们缩小问题规模，可以这样想：最后一步有三种情况，走1步（之前上了n-1个台阶，走法为f(n-1)种），走2步（之前上了 n-2个台阶，走法为f(n-2)种），走3步，（之前上了n-1个台阶，走法为f(n-3)种，f(n)=f(n-1)+f(n-2)+f(n-3),n&gt;3</p><h1 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_</span>小白上楼梯 </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner sc=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"><span class="keyword">int</span> N=sc.nextInt();</span><br><span class="line"><span class="keyword">int</span> re=f(N);</span><br><span class="line">System.out.println(re);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">2</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">3</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> f(n-<span class="number">1</span>)+f(n-<span class="number">2</span>)+f(n-<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目描述：&quot;&gt;&lt;a href=&quot;#题目描述：&quot; class=&quot;headerlink&quot; title=&quot;题目描述：&quot;&gt;&lt;/a&gt;题目描述：&lt;/h1&gt;&lt;p&gt;小白正在上楼梯，楼梯有n阶台阶，小白一次可以上1阶，2阶或者3阶，实现一个方法,计算小白有多少种走完楼梯的方式。&lt;/</summary>
      
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="算法" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"/>
    
    <category term="java" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="查找与排序" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E6%9F%A5%E6%89%BE%E4%B8%8E%E6%8E%92%E5%BA%8F/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="查找与排序" scheme="http://example.com/tags/%E6%9F%A5%E6%89%BE%E4%B8%8E%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>二分查找递归解法</title>
    <link href="http://example.com/2021/02/16/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E9%80%92%E5%BD%92%E8%A7%A3%E6%B3%95/"/>
    <id>http://example.com/2021/02/16/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E9%80%92%E5%BD%92%E8%A7%A3%E6%B3%95/</id>
    <published>2021-02-16T14:30:23.110Z</published>
    <updated>2021-02-18T11:35:57.496Z</updated>
    
    <content type="html"><![CDATA[<h1 id="二分查找递归解法"><a href="#二分查找递归解法" class="headerlink" title="二分查找递归解法"></a>二分查找递归解法</h1><p>全范围内二分查找 等价于三个子问题： 左边找（递归） 中间比 右边找（递归） 注意：左查找和右查找只选其一</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span>[] arr,<span class="keyword">int</span> low,<span class="keyword">int</span> high,<span class="keyword">int</span> key)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(low&gt;high)</span><br><span class="line"><span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> mid=low+((high-low)&gt;&gt;<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> midVal=arr[mid];</span><br><span class="line"><span class="keyword">if</span>(midVal&lt;key)&#123;</span><br><span class="line"><span class="keyword">return</span> binarySearch(arr,mid+<span class="number">1</span>,high,key);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (midVal&gt;key)&#123;</span><br><span class="line"><span class="keyword">return</span> binarySearch(arr,low,mid-<span class="number">1</span>,key);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> mid;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>找重复 1、找到一种划分方法 2、找到递推公式或者等价转换 都是父问题转化为求解子问题 找变化的量 变化的量通常要作为参数 找到出口 根据参数变化的趋势，对边界进行控制，适时终止递归</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;二分查找递归解法&quot;&gt;&lt;a href=&quot;#二分查找递归解法&quot; class=&quot;headerlink&quot; title=&quot;二分查找递归解法&quot;&gt;&lt;/a&gt;二分查找递归解法&lt;/h1&gt;&lt;p&gt;全范围内二分查找 等价于三个子问题： 左边找（递归） 中间比 右边找（递归） 注意：左查找和</summary>
      
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="算法" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"/>
    
    <category term="java" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="查找与排序" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E6%9F%A5%E6%89%BE%E4%B8%8E%E6%8E%92%E5%BA%8F/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="查找与排序" scheme="http://example.com/tags/%E6%9F%A5%E6%89%BE%E4%B8%8E%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>汉诺塔</title>
    <link href="http://example.com/2021/02/09/%E6%B1%89%E8%AF%BA%E5%A1%94/"/>
    <id>http://example.com/2021/02/09/%E6%B1%89%E8%AF%BA%E5%A1%94/</id>
    <published>2021-02-09T06:44:12.819Z</published>
    <updated>2021-02-16T08:28:29.400Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h1><p>相传在古印度圣庙中，有一种被称为汉诺塔(Hanoi)的游戏。该游戏是在一块铜板装置上，有三根杆(编号A、B、C)，在A杆自下而上、由大到小按顺序放置64个金盘(如下图)。游戏的目标：把A杆上的金盘全部移到C杆上，并仍保持原有顺序叠好。操作规则：每次只能移动一个盘子，并且在移动过程中三根杆上都始终保持大盘在下，小盘在上，操作过程中盘子可以置于A、B、C任一杆上。</p><h1 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h1><p>1-N从A移动到B，C作为辅助 </p><p>等价于： </p><p>1、1~N-1从A移动到C，B为辅助 </p><p>2、把N从A移动到B </p><p>3、1-N-1从C移动到B，A为辅助 </p><p>在这里插入图片描述</p><p><img src="/../images/%E6%B1%89%E8%AF%BA%E5%A1%94/image-20210209144320419.png" alt="image-20210209144320419"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 将N个盘子从source移动到target的路径的打印</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* N 初始的N个从小到大的盘子，N是最大编号</span></span><br><span class="line"><span class="comment">* source 原始柱子</span></span><br><span class="line"><span class="comment">* target 辅助的柱子</span></span><br><span class="line"><span class="comment">* help 目标柱子</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printHanoiTower</span><span class="params">(<span class="keyword">int</span> N, String source, String target, String help)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (N == <span class="number">1</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;move &quot;</span> + N + <span class="string">&quot; from &quot;</span> + source + <span class="string">&quot; to &quot;</span> + target);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">printHanoiTower(N - <span class="number">1</span>, source, help, target); <span class="comment">// 先把前N-1个盘子挪到辅助空间上去</span></span><br><span class="line">System.out.println(<span class="string">&quot;move &quot;</span> + N + <span class="string">&quot; from &quot;</span> + source + <span class="string">&quot; to &quot;</span> + target); <span class="comment">// N可以顺利到达target</span></span><br><span class="line">printHanoiTower(N - <span class="number">1</span>, help, target, source); <span class="comment">// 让N-1从辅助空间回到源空间上去</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">printHanoiTower(<span class="number">3</span>, <span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="string">&quot;C&quot;</span>);</span><br><span class="line"><span class="comment">//从1-N从A移动到B，C为辅助</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题描述：&quot;&gt;&lt;a href=&quot;#问题描述：&quot; class=&quot;headerlink&quot; title=&quot;问题描述：&quot;&gt;&lt;/a&gt;问题描述：&lt;/h1&gt;&lt;p&gt;相传在古印度圣庙中，有一种被称为汉诺塔(Hanoi)的游戏。该游戏是在一块铜板装置上，有三根杆(编号A、B、C)，在</summary>
      
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="算法" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"/>
    
    <category term="java" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="查找与排序" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E6%9F%A5%E6%89%BE%E4%B8%8E%E6%8E%92%E5%BA%8F/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="查找与排序" scheme="http://example.com/tags/%E6%9F%A5%E6%89%BE%E4%B8%8E%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>出现k次和出现1次的数</title>
    <link href="http://example.com/2021/02/03/%E5%87%BA%E7%8E%B0k%E6%AC%A1%E5%92%8C%E5%87%BA%E7%8E%B01%E6%AC%A1%E7%9A%84%E6%95%B0/"/>
    <id>http://example.com/2021/02/03/%E5%87%BA%E7%8E%B0k%E6%AC%A1%E5%92%8C%E5%87%BA%E7%8E%B01%E6%AC%A1%E7%9A%84%E6%95%B0/</id>
    <published>2021-02-03T09:20:49.034Z</published>
    <updated>2021-02-08T06:44:18.715Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h1><p>数组中只有一个数出现了1次，其他的数都出现了k次，请输出出现了1次的数</p><h1 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h1><p>这道题有很多种做法，但是这里我们只考虑如何利用进制的方法去做，多的也不说，大家只要记住一个结论k个相同的k进制数做不进位加法结果为 0。举个例子，3个相同的三进制数，假设个这个数是2，2的三进制是011，所以三个011做不进位加法结果就是011+011+011=000；再比方说10个十 进制数相加，假设这个数是10，做不进位加法最后结果也是0</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner cin = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span>[] arr = &#123;<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">6</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> len = arr.length;</span><br><span class="line"><span class="keyword">char</span>[][] kRadix = <span class="keyword">new</span> <span class="keyword">char</span>[len][];</span><br><span class="line"><span class="keyword">int</span> k = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> maxlen = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//转换成k进制字符数组</span></span><br><span class="line"><span class="comment">//对于每个数字</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len;i++) &#123;</span><br><span class="line">kRadix[i] = <span class="keyword">new</span> StringBuilder(Integer.toString(arr[i],k)).reverse().toString().toCharArray();</span><br><span class="line"><span class="keyword">if</span>(maxlen &lt; kRadix[i].length)</span><br><span class="line">maxlen = kRadix[i].length;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span>[] resArr = <span class="keyword">new</span> <span class="keyword">int</span>[maxlen];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len;i++) &#123;</span><br><span class="line"><span class="comment">//不进位加法</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; maxlen;j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(j &gt; kRadix[i].length)</span><br><span class="line">resArr[j] += <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">resArr[j] += (kRadix[i][j] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; maxlen;i++)</span><br><span class="line">res += (resArr[i] % k) * (<span class="keyword">int</span>)(Math.pow(k,i));</span><br><span class="line">System.out.println(res);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目描述：&quot;&gt;&lt;a href=&quot;#题目描述：&quot; class=&quot;headerlink&quot; title=&quot;题目描述：&quot;&gt;&lt;/a&gt;题目描述：&lt;/h1&gt;&lt;p&gt;数组中只有一个数出现了1次，其他的数都出现了k次，请输出出现了1次的数&lt;/p&gt;
&lt;h1 id=&quot;分析：&quot;&gt;&lt;a hr</summary>
      
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="算法" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"/>
    
    <category term="java" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="查找与排序" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E6%9F%A5%E6%89%BE%E4%B8%8E%E6%8E%92%E5%BA%8F/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="查找与排序" scheme="http://example.com/tags/%E6%9F%A5%E6%89%BE%E4%B8%8E%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>乘2挪整：二进制表示浮点实数</title>
    <link href="http://example.com/2021/02/03/%E4%B9%982%E6%8C%AA%E6%95%B4%EF%BC%9A%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%A1%A8%E7%A4%BA%E6%B5%AE%E7%82%B9%E5%AE%9E%E6%95%B0/"/>
    <id>http://example.com/2021/02/03/%E4%B9%982%E6%8C%AA%E6%95%B4%EF%BC%9A%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%A1%A8%E7%A4%BA%E6%B5%AE%E7%82%B9%E5%AE%9E%E6%95%B0/</id>
    <published>2021-02-03T09:17:16.647Z</published>
    <updated>2021-02-08T06:44:27.671Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h1><p>给定一个介于0和1之间的实数，（如0.625），类型为double，打印他的二进制表示（0.101），如果该数字无法精确地用32位以内地二进制表示， 则打印“ERROR”</p><h1 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h1><p>因为二进制左移是乘二，右移是除二，0.101（二进制）也就是0.5+0.125=0.625</p><p>浮点数求二进制实际上就是除二取余的逆运算，先把原数乘二，0.625*2=1.25，小数点前面有1，就把那个1干掉，输出0.1，剩下0.25，再乘二等于0.5不足1，故在后面加0，这时输出为0.10，0.5再乘二恰好是1.0那么同上干掉1，输出为0.101</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner cin = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">double</span> num = cin.nextDouble();</span><br><span class="line">StringBuilder sb = <span class="keyword">new</span> StringBuilder(<span class="string">&quot;0.&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(num &gt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">double</span> r = num * <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(r &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">num = r - <span class="number">1</span>;</span><br><span class="line">sb.append(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">num = r;</span><br><span class="line">sb.append(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sb.length() &gt; <span class="number">34</span>)</span><br><span class="line">System.out.println(<span class="string">&quot;ERROR&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">System.out.println(sb.toString());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目描述：&quot;&gt;&lt;a href=&quot;#题目描述：&quot; class=&quot;headerlink&quot; title=&quot;题目描述：&quot;&gt;&lt;/a&gt;题目描述：&lt;/h1&gt;&lt;p&gt;给定一个介于0和1之间的实数，（如0.625），类型为double，打印他的二进制表示（0.101），如果该数字无法</summary>
      
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="算法" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"/>
    
    <category term="java" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="查找与排序" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E6%9F%A5%E6%89%BE%E4%B8%8E%E6%8E%92%E5%BA%8F/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="查找与排序" scheme="http://example.com/tags/%E6%9F%A5%E6%89%BE%E4%B8%8E%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>将整数的奇偶位互换</title>
    <link href="http://example.com/2021/02/02/%E5%B0%86%E6%95%B4%E6%95%B0%E7%9A%84%E5%A5%87%E5%81%B6%E4%BD%8D%E4%BA%92%E6%8D%A2/"/>
    <id>http://example.com/2021/02/02/%E5%B0%86%E6%95%B4%E6%95%B0%E7%9A%84%E5%A5%87%E5%81%B6%E4%BD%8D%E4%BA%92%E6%8D%A2/</id>
    <published>2021-02-02T07:34:37.150Z</published>
    <updated>2021-02-08T06:44:38.410Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h1><p>将整数的奇偶位互换，假设这个数是9，二进制就是1001，那么得到的结果就是0110</p><h1 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h1><p>首先我们需要两个个数 </p><p>a = 0x55555555</p><p> b = 0xaaaaaaaa </p><p>a和b都是16进制数，转换为二进制分别是0101 0101 0101…，1010 1010 1010…（因为1010对应的十进制是10，而10在16进制中是a，0101也同 理），然后将需要改变的数n分别对a和b进行&amp;运算得到c和d，然后将c向左移1位，将d向右移1位，再分别进行异或，就得到所求结果，看下面示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="number">1001</span></span><br><span class="line">a = <span class="number">0101</span></span><br><span class="line">b = <span class="number">1010</span></span><br><span class="line">c = n &amp; a = <span class="number">0001</span></span><br><span class="line">d = n &amp; b = <span class="number">1000</span></span><br><span class="line">res = (c &lt;&lt; <span class="number">1</span>) ^ (d &gt;&gt; <span class="number">1</span>) = <span class="number">0110</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">_</span>奇偶位交换 </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a=<span class="number">6</span>;</span><br><span class="line">System.out.println(m(a));</span><br><span class="line"><span class="comment">//结果为9</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">m</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ou=i&amp;<span class="number">0xaaaaaaaa</span>;<span class="comment">//和1010 1010 ...做与运算得到偶位</span></span><br><span class="line"><span class="keyword">int</span> ji=i&amp;<span class="number">0x55555555</span>;<span class="comment">//和0101 0101 ...做与运算得到奇位</span></span><br><span class="line"><span class="keyword">return</span> (ou&gt;&gt;<span class="number">1</span>)^(ji&lt;&lt;<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目描述：&quot;&gt;&lt;a href=&quot;#题目描述：&quot; class=&quot;headerlink&quot; title=&quot;题目描述：&quot;&gt;&lt;/a&gt;题目描述：&lt;/h1&gt;&lt;p&gt;将整数的奇偶位互换，假设这个数是9，二进制就是1001，那么得到的结果就是0110&lt;/p&gt;
&lt;h1 id=&quot;分析：&quot;</summary>
      
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="算法" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"/>
    
    <category term="java" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="查找与排序" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E6%9F%A5%E6%89%BE%E4%B8%8E%E6%8E%92%E5%BA%8F/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="查找与排序" scheme="http://example.com/tags/%E6%9F%A5%E6%89%BE%E4%B8%8E%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>数的读法</title>
    <link href="http://example.com/2021/01/27/%E6%95%B0%E7%9A%84%E8%AF%BB%E6%B3%95/"/>
    <id>http://example.com/2021/01/27/%E6%95%B0%E7%9A%84%E8%AF%BB%E6%B3%95/</id>
    <published>2021-01-27T07:29:37.485Z</published>
    <updated>2021-01-30T06:15:19.264Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h1><p>Tom教授正在给研究生讲授一门关于基因的课程，有一件事情让他颇为头疼：一条染色体上有成千上万个碱基对，它们从0开始编号，到几百万，几千万，甚至上亿。<br>　　比如说，在对学生讲解第1234567009号位置上的碱基时，光看着数字是很难准确的念出来的。<br>　　所以，他迫切地需要一个系统，然后当他输入12 3456 7009时，会给出相应的念法：<br>　　十二亿三千四百五十六万七千零九<br>　　用汉语拼音表示为<br>　　shi er yi san qian si bai wu shi liu wan qi qian ling jiu<br>　　这样他只需要照着念就可以了。<br>　　你的任务是帮他设计这样一个系统：给定一个阿拉伯数字串，你帮他按照中文读写的规范转为汉语拼音字串，相邻的两个音节用一个空格符格开。<br>　　注意必须严格按照规范，比如说“10010”读作“yi wan ling yi shi”而不是“yi wan ling shi”，“100000”读作“shi wan”而不是“yi shi wan”，“2000”读作“er qian”而不是“liang qian”。</p><h2 id="资源限制："><a href="#资源限制：" class="headerlink" title="资源限制："></a>资源限制：</h2><p>时间限制：1.0s  内存限制：512.0MB</p><h2 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h2><p>有一个数字串，数值大小不超过2,000,000,000。</p><h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>是一个由小写英文字母，逗号和空格组成的字符串，表示该数的英文读法。</p><h2 id="样例输入："><a href="#样例输入：" class="headerlink" title="样例输入："></a>样例输入：</h2><p>1234567009</p><h2 id="样例输出："><a href="#样例输出：" class="headerlink" title="样例输出："></a>样例输出：</h2><p>shi er yi san qian si bai wu shi liu wan qi qian ling jiu</p><h1 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h1><p>具体的分析放在的代码的注释中，因为我技术有限这个代码应该还有不少的bug，希望大家再补充，<img src="/images/%E6%95%B0%E7%9A%84%E8%AF%BB%E6%B3%95/image-20210130140250384.png" alt="image-20210130140250384"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String n=in.next();</span><br><span class="line">        <span class="keyword">int</span> zerocount=n.length()-<span class="number">1</span>;</span><br><span class="line">        String regex=<span class="string">&quot;[0]*&quot;</span>;  <span class="comment">//判断是否全为0的正则表达式</span></span><br><span class="line">        <span class="keyword">boolean</span> onezero=<span class="keyword">false</span>;  <span class="comment">//判断中间要不要输出0</span></span><br><span class="line">        a:<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n.length();i++)&#123;</span><br><span class="line">            String ydq=n.substring(i+<span class="number">1</span>);  <span class="comment">//当前字符之后余下的字符</span></span><br><span class="line">            <span class="keyword">boolean</span> allzero=Pattern.matches(regex,ydq);  <span class="comment">//若余下的字符全部为0</span></span><br><span class="line">            String dq=n.substring(i,i+<span class="number">1</span>);  <span class="comment">//取当前字符</span></span><br><span class="line">            <span class="keyword">while</span>(dq.equals(<span class="string">&quot;0&quot;</span>)&amp;&amp; !allzero)&#123;   <span class="comment">//若当前字符为0，而且余下的字符不全是0，则然输出一个0的指针变true</span></span><br><span class="line">                onezero=<span class="keyword">true</span>;</span><br><span class="line">                zerocount--;</span><br><span class="line">                <span class="keyword">continue</span> a;  <span class="comment">//跳过这几次中间为0的循环</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (onezero)&#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;ling &quot;</span>);  <span class="comment">//输出一个0</span></span><br><span class="line">                onezero=<span class="keyword">false</span>;  <span class="comment">//让指针回归false</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> ddw=zerocount/<span class="number">4</span>;</span><br><span class="line">            <span class="keyword">int</span> sdw=zerocount%<span class="number">4</span>;</span><br><span class="line">            <span class="keyword">if</span> (sdw==<span class="number">1</span>)&#123;  <span class="comment">//要输出十位</span></span><br><span class="line">                <span class="keyword">if</span> (i !=<span class="number">0</span>)&#123;  <span class="comment">//判断是不是两位数，比如20要输出er shi但10只要输出shi</span></span><br><span class="line">                    topy(dq);</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.print(<span class="string">&quot;shi &quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (zerocount==<span class="number">5</span>)&#123;  <span class="comment">//120000的时候要shi 和er一起输出</span></span><br><span class="line">                    topy(n.substring(i+<span class="number">1</span>,i+<span class="number">2</span>));</span><br><span class="line">                    i++;</span><br><span class="line">                    zerocount--;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (sdw==<span class="number">2</span>)&#123;</span><br><span class="line">                topy(dq);</span><br><span class="line">                System.out.print(<span class="string">&quot;bai &quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (sdw==<span class="number">3</span>)&#123;</span><br><span class="line">                topy(dq);</span><br><span class="line">                System.out.print(<span class="string">&quot;qian &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (ddw==<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span> (i==<span class="number">0</span>)&#123;  <span class="comment">//10000的时候要输出yi wan但100000的时候要输出shi wan 而不是yi shi wan</span></span><br><span class="line">                    topy(dq);</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.print(<span class="string">&quot;wan &quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (ddw==<span class="number">2</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span> (i==<span class="number">0</span>)&#123;</span><br><span class="line">                    topy(dq);</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.print(<span class="string">&quot;yi &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (zerocount==<span class="number">0</span>&amp;&amp;! <span class="string">&quot;0&quot;</span>.equals(dq))&#123;</span><br><span class="line">                topy(dq);</span><br><span class="line">            &#125;</span><br><span class="line">            zerocount--;</span><br><span class="line">            <span class="keyword">if</span> (allzero)&#123;</span><br><span class="line">                <span class="keyword">break</span> a;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">topy</span><span class="params">(String num)</span></span>&#123; <span class="comment">//此方法用于把数字转化位拼音</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;1&quot;</span>.equals(num))&#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;yi &quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;2&quot;</span>.equals(num))&#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;er &quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;3&quot;</span>.equals(num))&#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;san &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;4&quot;</span>.equals(num))&#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;si &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;5&quot;</span>.equals(num))&#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;wu &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;6&quot;</span>.equals(num))&#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;liu &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;7&quot;</span>.equals(num))&#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;qi &quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;8&quot;</span>.equals(num))&#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;ba &quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;9&quot;</span>.equals(num))&#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;jiu &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目描述：&quot;&gt;&lt;a href=&quot;#题目描述：&quot; class=&quot;headerlink&quot; title=&quot;题目描述：&quot;&gt;&lt;/a&gt;题目描述：&lt;/h1&gt;&lt;p&gt;Tom教授正在给研究生讲授一门关于基因的课程，有一件事情让他颇为头疼：一条染色体上有成千上万个碱基对，它们从0开始编</summary>
      
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="算法" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"/>
    
    <category term="java" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="练习题" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
    
    <category term="基础练习" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="基础" scheme="http://example.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="判断" scheme="http://example.com/tags/%E5%88%A4%E6%96%AD/"/>
    
    <category term="函数" scheme="http://example.com/tags/%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>完美的代价</title>
    <link href="http://example.com/2021/01/24/%E5%AE%8C%E7%BE%8E%E7%9A%84%E4%BB%A3%E4%BB%B7/"/>
    <id>http://example.com/2021/01/24/%E5%AE%8C%E7%BE%8E%E7%9A%84%E4%BB%A3%E4%BB%B7/</id>
    <published>2021-01-24T08:33:54.242Z</published>
    <updated>2021-01-25T10:25:09.848Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h1><p>回文串，是一种特殊的字符串，它从左往右读和从右往左读是一样的。小龙龙认为回文串才是完美的。现在给你一个串，它不一定是回文的，请你计算最少的交换次数使得该串变成一个完美的回文串。<br>　　交换的定义是：交换两个相邻的字符<br>　　例如mamad<br>　　第一次交换 ad : mamda<br>　　第二次交换 md : madma<br>　　第三次交换 ma : madam (回文！完美！)</p><h2 id="资源限制："><a href="#资源限制：" class="headerlink" title="资源限制："></a>资源限制：</h2><p>时间限制：1.0s  内存限制：512.0MB</p><h2 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h2><p>第一行是一个整数N，表示接下来的字符串的长度(N &lt;= 8000)<br>第二行是一个字符串，长度为N.只包含小写字母</p><h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>如果可能，输出最少的交换次数。<br>否则输出Impossible</p><h2 id="样例输入："><a href="#样例输入：" class="headerlink" title="样例输入："></a>样例输入：</h2><p>5<br>mamad</p><h2 id="样例输出："><a href="#样例输出：" class="headerlink" title="样例输出："></a>样例输出：</h2><p>3</p><h1 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题描述：&quot;&gt;&lt;a href=&quot;#问题描述：&quot; class=&quot;headerlink&quot; title=&quot;问题描述：&quot;&gt;&lt;/a&gt;问题描述：&lt;/h1&gt;&lt;p&gt;回文串，是一种特殊的字符串，它从左往右读和从右往左读是一样的。小龙龙认为回文串才是完美的。现在给你一个串，它不一定是</summary>
      
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="算法" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"/>
    
    <category term="java" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="练习题" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
    
    <category term="基础练习" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="基础" scheme="http://example.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="贪心算法" scheme="http://example.com/tags/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>矩形面积交</title>
    <link href="http://example.com/2021/01/23/%E7%9F%A9%E5%BD%A2%E9%9D%A2%E7%A7%AF%E4%BA%A4/"/>
    <id>http://example.com/2021/01/23/%E7%9F%A9%E5%BD%A2%E9%9D%A2%E7%A7%AF%E4%BA%A4/</id>
    <published>2021-01-23T13:41:31.770Z</published>
    <updated>2021-01-24T08:35:17.953Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h1><p>平面上有两个矩形，它们的边平行于直角坐标系的X轴或Y轴。对于每个矩形，我们给出它的一对相对顶点的坐标，请你编程算出两个矩形的交的面积。</p><h2 id="资源限制："><a href="#资源限制：" class="headerlink" title="资源限制："></a>资源限制：</h2><p>时间限制：1.0s  内存限制：512.0MB</p><h2 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h2><p>输入仅包含两行，每行描述一个矩形。<br>在每行中，给出矩形的一对相对顶点的坐标，每个点的坐标都用两个绝对值不超过10^7的实数表示。</p><h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>输出仅包含一个实数，为交的面积，保留到小数后两位。</p><h2 id="样例输入："><a href="#样例输入：" class="headerlink" title="样例输入："></a>样例输入：</h2><p>1 1 3 3<br>2 2 4 4</p><h2 id="样例输出："><a href="#样例输出：" class="headerlink" title="样例输出："></a>样例输出：</h2><p>1.00</p><h1 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h1><p>本题的意思是打出两个矩形的对角顶点坐标，通过顶点坐标来确定一个矩形，如图</p><p><img src="/images/%E7%9F%A9%E5%BD%A2%E9%9D%A2%E7%A7%AF%E4%BA%A4/image-20210124104906752.png" alt="image-20210124104906752"></p><p>由图可得知顶点bc组成的矩形的面积是所求的面积，可以看出b点是两个下顶点中较大的一个，c点是较小的一个，但情况不止这一种，如下图</p><p><img src="/images/%E7%9F%A9%E5%BD%A2%E9%9D%A2%E7%A7%AF%E4%BA%A4/image-20210124105640383.png" alt="image-20210124105640383"></p><p>由此图得知，点b不是两个下顶点中的任意一个，而是由两个下顶点中较大的横坐标和较大的纵坐标组成的，点c同理，故我们只要再设一个数组来储存符合要求的坐标即可。</p><p>但是，除了相交的情况还有不相交的情况，</p><p><img src="/images/%E7%9F%A9%E5%BD%A2%E9%9D%A2%E7%A7%AF%E4%BA%A4/image-20210124110102913.png" alt="image-20210124110102913"></p><p>则还需要几个if来判断。</p><p>以上都是在输入为下顶点加上顶点的情况下成立的，所以我们还要设置一个方法来判断是否输入的是下顶点加上顶点的格式，若不是则交换位置。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.DecimalFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">double</span>[][] arr=<span class="keyword">new</span> <span class="keyword">double</span>[<span class="number">2</span>][<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)&#123;</span><br><span class="line">                arr[i][j]=in.nextDouble();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">double</span>[] arr1=arr[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">double</span>[] arr2=arr[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">double</span>[] result=<span class="keyword">new</span> <span class="keyword">double</span>[<span class="number">4</span>];</span><br><span class="line">        arr1=format(arr1,<span class="number">0</span>);</span><br><span class="line">        arr1=format(arr1,<span class="number">1</span>);</span><br><span class="line">        arr2=format(arr2,<span class="number">0</span>);</span><br><span class="line">        arr2=format(arr2,<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (arr1[<span class="number">2</span>]&lt;=arr2[<span class="number">0</span>]||arr1[<span class="number">3</span>]&lt;=arr2[<span class="number">1</span>]||arr2[<span class="number">2</span>]&lt;=arr1[<span class="number">0</span>]||arr2[<span class="number">3</span>]&lt;=arr1[<span class="number">1</span>])&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;0.00&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        result[<span class="number">0</span>]=Max(arr1[<span class="number">0</span>],arr2[<span class="number">0</span>]);</span><br><span class="line">        result[<span class="number">1</span>]=Max(arr1[<span class="number">1</span>],arr2[<span class="number">1</span>]);</span><br><span class="line">        result[<span class="number">2</span>]=Min(arr1[<span class="number">2</span>],arr2[<span class="number">2</span>]);</span><br><span class="line">        result[<span class="number">3</span>]=Min(arr1[<span class="number">3</span>],arr2[<span class="number">3</span>]);</span><br><span class="line">        <span class="keyword">double</span> s=(result[<span class="number">2</span>]-result[<span class="number">0</span>])*(result[<span class="number">3</span>]-result[<span class="number">1</span>]);</span><br><span class="line">        String str=<span class="keyword">new</span> DecimalFormat(<span class="string">&quot;0.00&quot;</span>).format(s);</span><br><span class="line">        System.out.println(str);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span>[] format(<span class="keyword">double</span> arr[],<span class="keyword">int</span> i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[i]&gt;arr[i+<span class="number">2</span>])&#123;</span><br><span class="line">            <span class="keyword">double</span> t=arr[i];</span><br><span class="line">            arr[i]=arr[i+<span class="number">2</span>];</span><br><span class="line">            arr[i+<span class="number">2</span>]=t;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">Max</span><span class="params">(<span class="keyword">double</span> d1,<span class="keyword">double</span> d2)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> d1&gt;d2 ? d1:d2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">Min</span><span class="params">(<span class="keyword">double</span> d1,<span class="keyword">double</span> d2)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> d1&lt;d2 ? d1:d2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目描述：&quot;&gt;&lt;a href=&quot;#题目描述：&quot; class=&quot;headerlink&quot; title=&quot;题目描述：&quot;&gt;&lt;/a&gt;题目描述：&lt;/h1&gt;&lt;p&gt;平面上有两个矩形，它们的边平行于直角坐标系的X轴或Y轴。对于每个矩形，我们给出它的一对相对顶点的坐标，请你编程算出两</summary>
      
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="算法" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"/>
    
    <category term="java" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="练习题" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
    
    <category term="基础练习" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="基础" scheme="http://example.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="判断" scheme="http://example.com/tags/%E5%88%A4%E6%96%AD/"/>
    
    <category term="线段交" scheme="http://example.com/tags/%E7%BA%BF%E6%AE%B5%E4%BA%A4/"/>
    
  </entry>
  
  <entry>
    <title>矩阵乘法</title>
    <link href="http://example.com/2021/01/22/%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95/"/>
    <id>http://example.com/2021/01/22/%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95/</id>
    <published>2021-01-22T09:38:25.141Z</published>
    <updated>2021-01-23T13:54:19.471Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h1><p>给定一个N阶矩阵A，输出A的M次幂（M是非负整数）<br>　　例如：<br>　　A =<br>　　1 2<br>　　3 4<br>　　A的2次幂<br>　　7 10<br>　　15 22</p><h2 id="资源限制："><a href="#资源限制：" class="headerlink" title="资源限制："></a>资源限制：</h2><p>时间限制：1.0s  内存限制：512.0MB</p><h2 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h2><p>第一行是一个正整数N、M（1&lt;=N&lt;=30, 0&lt;=M&lt;=5），表示矩阵A的阶数和要求的幂数<br>　　接下来N行，每行N个绝对值不超过10的非负整数，描述矩阵A的值</p><h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>输出共N行，每行N个整数，表示A的M次幂所对应的矩阵。相邻的数之间用一个空格隔开</p><h2 id="样例输入："><a href="#样例输入：" class="headerlink" title="样例输入："></a>样例输入：</h2><p>2 2<br>1 2<br>3 4</p><h2 id="样例输出："><a href="#样例输出：" class="headerlink" title="样例输出："></a>样例输出：</h2><p>7 10<br>15 22</p><h1 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h1><p>写这一题之前，先得学会矩阵乘法，</p><p><img src="/images/%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95/image-20210123194114017.png" alt="image-20210123194114017"></p><p>然后我们定义一个存放原始矩阵的数组，再定义一个用与存放结果的数组，然后开始循环，因为一个矩阵的零次幂一定是单位矩阵，而且已经将结果数组中加入了原始数组，这样幂等于一的时候也可以不用加入循环，故，只要从幂为二时开始循环</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n=in.nextInt();</span><br><span class="line">        <span class="keyword">int</span> cf=in.nextInt();</span><br><span class="line">        <span class="keyword">int</span>[][] arr=<span class="keyword">new</span> <span class="keyword">int</span>[n][n];</span><br><span class="line">        <span class="keyword">int</span>[][] r=arr;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">                arr[i][j]=in.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//0次方的时候是单位矩阵</span></span><br><span class="line">        <span class="keyword">if</span> (cf==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">                    <span class="keyword">if</span> (i==j)&#123;</span><br><span class="line">                        arr[i][j]=<span class="number">1</span>;</span><br><span class="line">                    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                        arr[i][j]=<span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> p=<span class="number">2</span>;p&lt;=cf;p++)&#123;</span><br><span class="line">            <span class="keyword">int</span>[][] temp=<span class="keyword">new</span> <span class="keyword">int</span>[n][n];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123; <span class="comment">//i代表行</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123; <span class="comment">//j代表列</span></span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> w=<span class="number">0</span>;w&lt;n;w++)&#123;</span><br><span class="line">                        temp[i][j] += r[i][w]*arr[w][j];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            r=temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">                System.out.print(r[i][j]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题描述：&quot;&gt;&lt;a href=&quot;#问题描述：&quot; class=&quot;headerlink&quot; title=&quot;问题描述：&quot;&gt;&lt;/a&gt;问题描述：&lt;/h1&gt;&lt;p&gt;给定一个N阶矩阵A，输出A的M次幂（M是非负整数）&lt;br&gt;　　例如：&lt;br&gt;　　A =&lt;br&gt;　　1 2&lt;br&gt;　　</summary>
      
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="算法" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"/>
    
    <category term="java" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="练习题" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
    
    <category term="基础练习" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="循环" scheme="http://example.com/tags/%E5%BE%AA%E7%8E%AF/"/>
    
    <category term="基础" scheme="http://example.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="二维数组" scheme="http://example.com/tags/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84/"/>
    
    <category term="矩阵" scheme="http://example.com/tags/%E7%9F%A9%E9%98%B5/"/>
    
  </entry>
  
  <entry>
    <title>分解质因数</title>
    <link href="http://example.com/2021/01/22/%E5%88%86%E8%A7%A3%E8%B4%A8%E5%9B%A0%E6%95%B0/"/>
    <id>http://example.com/2021/01/22/%E5%88%86%E8%A7%A3%E8%B4%A8%E5%9B%A0%E6%95%B0/</id>
    <published>2021-01-22T06:11:56.814Z</published>
    <updated>2021-01-22T08:51:38.234Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h1><p>求出区间[a,b]中所有整数的质因数分解。</p><h2 id="资源限制："><a href="#资源限制：" class="headerlink" title="资源限制："></a>资源限制：</h2><p>时间限制：1.0s  内存限制：512.0MB</p><h2 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h2><p>输入两个整数a，b。</p><h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>每行输出一个数的分解，形如k=a1<em>a2</em>a3…(a1&lt;=a2&lt;=a3…，k也是从小到大的)(具体可看样例)</p><h2 id="样例输入："><a href="#样例输入：" class="headerlink" title="样例输入："></a>样例输入：</h2><p>3  10</p><h2 id="样例输出："><a href="#样例输出：" class="headerlink" title="样例输出："></a>样例输出：</h2><p>3=3<br>4=2<em>2<br>5=5<br>6=2</em>3<br>7=7<br>8=2<em>2</em>2<br>9=3<em>3<br>10=2</em>5</p><h2 id="提示："><a href="#提示：" class="headerlink" title="提示："></a>提示：</h2><p>先筛出所有素数，然后再分解。</p><h2 id="数据规模和约定："><a href="#数据规模和约定：" class="headerlink" title="数据规模和约定："></a>数据规模和约定：</h2><p>2&lt;=a&lt;=b&lt;=10000</p><h1 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h1><p>先定义了一个用于判断是不是素数的方法，如果是素数就可以直接输出了（不定义这玩意好像也无所谓），再定义一个方法用于分解素数，思路如下：如果这个数刚好能被i整除那么打印这个数加*再将这个数除i进入下一次递归，若不是因子则使i加一进入下一次递归，若这个数等于i，则直接输出这个数不用输出乘号。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in =<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> f=in.nextInt();</span><br><span class="line">        <span class="keyword">int</span> e=in.nextInt();</span><br><span class="line">        <span class="keyword">while</span> (f&lt;=e)&#123;</span><br><span class="line">            <span class="keyword">if</span> (ye(f))&#123;</span><br><span class="line">                System.out.println(f+<span class="string">&quot;=&quot;</span>+f);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.print(f+<span class="string">&quot;=&quot;</span>);</span><br><span class="line">                fj(f,<span class="number">2</span>);</span><br><span class="line">                System.out.println();</span><br><span class="line">            &#125;</span><br><span class="line">            f++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">ye</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;  <span class="comment">//判断是否为素数</span></span><br><span class="line">        <span class="keyword">boolean</span> flag=<span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=Math.sqrt(num);i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (num%i==<span class="number">0</span>)&#123;</span><br><span class="line">                flag=<span class="keyword">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag; <span class="comment">//是素数返回true不是返回false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">fj</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (;i&lt;=num;)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i&lt;num &amp;&amp; num%i==<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.print(i+<span class="string">&quot;*&quot;</span>);</span><br><span class="line">                num=num/i;</span><br><span class="line">                fj(num,i);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (i&lt;num&amp;&amp;num%i!=<span class="number">0</span>)&#123;</span><br><span class="line">                i++;</span><br><span class="line">                fj(num,i);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                System.out.print(num);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题描述：&quot;&gt;&lt;a href=&quot;#问题描述：&quot; class=&quot;headerlink&quot; title=&quot;问题描述：&quot;&gt;&lt;/a&gt;问题描述：&lt;/h1&gt;&lt;p&gt;求出区间[a,b]中所有整数的质因数分解。&lt;/p&gt;
&lt;h2 id=&quot;资源限制：&quot;&gt;&lt;a href=&quot;#资源限制：&quot; </summary>
      
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="算法" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"/>
    
    <category term="java" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="练习题" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
    
    <category term="基础练习" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="循环" scheme="http://example.com/tags/%E5%BE%AA%E7%8E%AF/"/>
    
    <category term="基础" scheme="http://example.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="质数分解" scheme="http://example.com/tags/%E8%B4%A8%E6%95%B0%E5%88%86%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>十六进制转八进制(误)</title>
    <link href="http://example.com/2021/01/22/%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E8%BD%AC%E5%85%AB%E8%BF%9B%E5%88%B6/"/>
    <id>http://example.com/2021/01/22/%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E8%BD%AC%E5%85%AB%E8%BF%9B%E5%88%B6/</id>
    <published>2021-01-22T05:35:47.366Z</published>
    <updated>2021-01-22T05:54:14.646Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h1><p>给定n个十六进制正整数，输出它们对应的八进制数。</p><h2 id="资源限制："><a href="#资源限制：" class="headerlink" title="资源限制："></a>资源限制：</h2><p>时间限制：1.0s  内存限制：512.0MB</p><h2 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h2><p>输入的第一行为一个正整数n （1&lt;=n&lt;=10）。<br>　　接下来n行，每行一个由0<del>9、大写字母A</del>F组成的字符串，表示要转换的十六进制正整数，每个十六进制数长度不超过100000。</p><h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>输出n行，每行为输入对应的八进制正整数。</p><p>　　<strong>【注意</strong>】<br>　　输入的十六进制数不会有前导0，比如012A。<br>　　输出的八进制数也不能有前导0。</p><h2 id="样例输入："><a href="#样例输入：" class="headerlink" title="样例输入："></a>样例输入：</h2><p>​        2<br>　　39<br>　　123ABC</p><h2 id="样例输出："><a href="#样例输出：" class="headerlink" title="样例输出："></a>样例输出：</h2><p>​        71<br>　　4435274</p><p>　　<strong>【</strong>提示】<br>　　先将十六进制数转换成某进制数，再由某进制数转换成八进制。</p><h1 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h1><p>一看这题，以为就是把16进制转换成十进制再转换成八进制，还给了个提示，我寻思着这谁想不到呀，就开始写了，写完之后发现，嗯？</p><p><img src="/images/%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E8%BD%AC%E5%85%AB%E8%BF%9B%E5%88%B6/image-20210122131630018.png" alt="image-20210122131630018"></p><p>这测试数据就离谱。我也意识到同类型最大的十六进制远比同类型最大的十进制要大得多，所以转化到十进制的时候必会溢出。于是我又去康了康别人写的怎么样。恍然大悟，可以用字符串来表示二进制一组一组的进行转化。先通过8421法转化成二进制再用421法转化为八进制。于是就有了下面的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">er</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> ass=in.nextInt();</span><br><span class="line">        String[] r=<span class="keyword">new</span> String[ass];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;ass;i++)&#123;</span><br><span class="line">            r[i]=in.next();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;ass;i++)&#123;</span><br><span class="line">            System.out.println(too(tob(r[i])));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">tob</span><span class="params">(String ass)</span> </span>&#123;</span><br><span class="line">        String r=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=ass.length()-<span class="number">1</span>;i&gt;=<span class="number">0</span>;i--) &#123;</span><br><span class="line">            String t=ass.substring(i,i+<span class="number">1</span>);</span><br><span class="line">            String num=Integer.toBinaryString(Integer.parseInt(t, <span class="number">16</span>));</span><br><span class="line">            <span class="keyword">if</span> (num.length()&lt;<span class="number">4</span>)&#123;        <span class="comment">//如果二进制不足四位向前补0</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> w=<span class="number">4</span>-num.length();w&gt;<span class="number">0</span>;w--)&#123;</span><br><span class="line">                    num=<span class="string">&quot;0&quot;</span>+num;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            r=num+r;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">too</span><span class="params">(String ass)</span></span>&#123;</span><br><span class="line">        String r=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (ass.length()%<span class="number">3</span>!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">3</span>-(ass.length()%<span class="number">3</span>);i&gt;<span class="number">0</span>;i--)&#123; <span class="comment">//不是三的倍数在前面补0</span></span><br><span class="line">                ass=<span class="string">&quot;0&quot;</span>+ass;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//取三位进行421法转8进制</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;ass.length();i=i+<span class="number">3</span>)&#123;</span><br><span class="line">                String num=ass.substring(i,i+<span class="number">3</span>);</span><br><span class="line">                <span class="keyword">int</span> p=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> s=<span class="number">0</span>;s&lt;num.length();s++)&#123;</span><br><span class="line">                    p=Integer.parseInt(num.substring(s,s+<span class="number">1</span>))*(<span class="keyword">int</span>)Math.pow(<span class="number">2</span>,<span class="number">2</span>-s)+p;</span><br><span class="line">                &#125;</span><br><span class="line">                num= String.valueOf(p);</span><br><span class="line">                r=r+num;</span><br><span class="line">        &#125;</span><br><span class="line">        r=r.replaceFirst(<span class="string">&quot;^0*&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试了一下好像完全符合要求，结果。。。</p><p><img src="/images/%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E8%BD%AC%E5%85%AB%E8%BF%9B%E5%88%B6/image-20210122132330565.png" alt="image-20210122132330565"></p><p>我是sb</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题描述：&quot;&gt;&lt;a href=&quot;#问题描述：&quot; class=&quot;headerlink&quot; title=&quot;问题描述：&quot;&gt;&lt;/a&gt;问题描述：&lt;/h1&gt;&lt;p&gt;给定n个十六进制正整数，输出它们对应的八进制数。&lt;/p&gt;
&lt;h2 id=&quot;资源限制：&quot;&gt;&lt;a href=&quot;#资源限制</summary>
      
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="算法" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"/>
    
    <category term="java" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="练习题" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
    
    <category term="基础练习" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="循环" scheme="http://example.com/tags/%E5%BE%AA%E7%8E%AF/"/>
    
    <category term="进制转换" scheme="http://example.com/tags/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"/>
    
    <category term="基础" scheme="http://example.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="字符处理" scheme="http://example.com/tags/%E5%AD%97%E7%AC%A6%E5%A4%84%E7%90%86/"/>
    
    <category term="判断" scheme="http://example.com/tags/%E5%88%A4%E6%96%AD/"/>
    
  </entry>
  
  <entry>
    <title>字符串对比</title>
    <link href="http://example.com/2021/01/21/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AF%B9%E6%AF%94/"/>
    <id>http://example.com/2021/01/21/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AF%B9%E6%AF%94/</id>
    <published>2021-01-21T03:01:44.672Z</published>
    <updated>2021-01-21T03:01:44.673Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h1><p>给定两个仅由大写字母或小写字母组成的字符串(长度介于1到10之间)，它们之间的关系是以下4中情况之一：<br>　　1：两个字符串长度不等。比如 Beijing 和 Hebei<br>　　2：两个字符串不仅长度相等，而且相应位置上的字符完全一致(区分大小写)，比如 Beijing 和 Beijing<br>　　3：两个字符串长度相等，相应位置上的字符仅在不区分大小写的前提下才能达到完全一致（也就是说，它并不满足情况2）。比如 beijing 和 BEIjing<br>　　4：两个字符串长度相等，但是即使是不区分大小写也不能使这两个字符串一致。比如 Beijing 和 Nanjing<br>　　编程判断输入的两个字符串之间的关系属于这四类中的哪一类，给出所属的类的编号。</p><h2 id="资源限制："><a href="#资源限制：" class="headerlink" title="资源限制："></a>资源限制：</h2><p>时间限制：1.0s  内存限制：512.0MB</p><h2 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h2><p>包括两行，每行都是一个字符串</p><h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>仅有一个数字，表明这两个字符串的关系编号</p><h2 id="样例输入："><a href="#样例输入：" class="headerlink" title="样例输入："></a>样例输入：</h2><p>BEIjing</p><p>beiJing</p><h2 id="样例输出："><a href="#样例输出：" class="headerlink" title="样例输出："></a>样例输出：</h2><p>3</p><h1 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String f=in.next();</span><br><span class="line">        String s=in.next();</span><br><span class="line">        <span class="keyword">if</span> (f.length()!=s.length())&#123;</span><br><span class="line">            System.out.println(<span class="number">1</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (f.equals(s))&#123;</span><br><span class="line">                System.out.println(<span class="number">2</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (f.toLowerCase().equals(s.toLowerCase()))&#123;</span><br><span class="line">                    System.out.println(<span class="number">3</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.println(<span class="number">4</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题描述：&quot;&gt;&lt;a href=&quot;#问题描述：&quot; class=&quot;headerlink&quot; title=&quot;问题描述：&quot;&gt;&lt;/a&gt;问题描述：&lt;/h1&gt;&lt;p&gt;给定两个仅由大写字母或小写字母组成的字符串(长度介于1到10之间)，它们之间的关系是以下4中情况之一：&lt;br&gt;　　1</summary>
      
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="算法" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"/>
    
    <category term="java" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="练习题" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
    
    <category term="基础练习" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="基础" scheme="http://example.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="字符串" scheme="http://example.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
    <category term="大小写" scheme="http://example.com/tags/%E5%A4%A7%E5%B0%8F%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>时间转换</title>
    <link href="http://example.com/2021/01/21/%E6%97%B6%E9%97%B4%E8%BD%AC%E6%8D%A2/"/>
    <id>http://example.com/2021/01/21/%E6%97%B6%E9%97%B4%E8%BD%AC%E6%8D%A2/</id>
    <published>2021-01-21T02:45:56.251Z</published>
    <updated>2021-01-22T05:35:34.352Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h1><p>给定一个以秒为单位的时间t，要求用“&lt;/H/&gt;:&lt;/M/&gt;:&lt;/S/&gt;”的格式来表示这个时间。&lt;/H/&gt;表示时间，&lt;/M/&gt;表示分钟，而&lt;/S/&gt;表示秒，它们都是整数且没有前导的“0”。例如，若t=0，则应输出是“0:0:0”；若t=3661，则输出“1:1:1”。</p><h2 id="资源限制："><a href="#资源限制：" class="headerlink" title="资源限制："></a>资源限制：</h2><p>时间限制：1.0s  内存限制：512.0MB</p><h2 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h2><p>输入只有一行，是一个整数t（0&lt;=t&lt;=86399）。</p><h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>输出只有一行，是以“&lt;/H/&gt;:&lt;/M/&gt;:&lt;/S/&gt;”的格式所表示的时间，不包括引号。</p><h2 id="样例输入："><a href="#样例输入：" class="headerlink" title="样例输入："></a>样例输入：</h2><p>0</p><h2 id="样例输出："><a href="#样例输出：" class="headerlink" title="样例输出："></a>样例输出：</h2><p>0:0:0</p><h2 id="样例输入：-1"><a href="#样例输入：-1" class="headerlink" title="样例输入："></a>样例输入：</h2><p>5436</p><h2 id="样例输出：-1"><a href="#样例输出：-1" class="headerlink" title="样例输出："></a>样例输出：</h2><p>1:30:36</p><h1 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">public class Main &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Scanner in&#x3D;new Scanner(System.in);</span><br><span class="line">        int t&#x3D;in.nextInt();</span><br><span class="line">        int h&#x3D;t&#x2F;3600;</span><br><span class="line">        System.out.print(h+&quot;:&quot;);</span><br><span class="line">        int m&#x3D;(t%3600)&#x2F;60;</span><br><span class="line">        System.out.print(m+&quot;:&quot;);</span><br><span class="line">        int s&#x3D;t%60;</span><br><span class="line">        System.out.print(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题描述：&quot;&gt;&lt;a href=&quot;#问题描述：&quot; class=&quot;headerlink&quot; title=&quot;问题描述：&quot;&gt;&lt;/a&gt;问题描述：&lt;/h1&gt;&lt;p&gt;给定一个以秒为单位的时间t，要求用“&amp;lt;/H/&amp;gt;:&amp;lt;/M/&amp;gt;:&amp;lt;/S/&amp;gt;”的格式来</summary>
      
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="算法" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"/>
    
    <category term="java" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="练习题" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
    
    <category term="基础练习" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="基础" scheme="http://example.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="取余" scheme="http://example.com/tags/%E5%8F%96%E4%BD%99/"/>
    
    <category term="数字字符混合输出" scheme="http://example.com/tags/%E6%95%B0%E5%AD%97%E5%AD%97%E7%AC%A6%E6%B7%B7%E5%90%88%E8%BE%93%E5%87%BA/"/>
    
  </entry>
  
  <entry>
    <title>十六进制转十进制</title>
    <link href="http://example.com/2021/01/19/%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E8%BD%AC%E5%8D%81%E8%BF%9B%E5%88%B6/"/>
    <id>http://example.com/2021/01/19/%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E8%BD%AC%E5%8D%81%E8%BF%9B%E5%88%B6/</id>
    <published>2021-01-19T07:40:45.604Z</published>
    <updated>2021-01-19T10:05:57.802Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h1><p>从键盘输入一个不超过8位的正的十六进制数字符串，将它转换为正的十进制数后输出。<br>　　注：十六进制数中的10~15分别用大写的英文字母A、B、C、D、E、F表示。</p><h2 id="资源限制："><a href="#资源限制：" class="headerlink" title="资源限制："></a>资源限制：</h2><p>时间限制：1.0s  内存限制：512.0MB</p><h2 id="样例输入："><a href="#样例输入：" class="headerlink" title="样例输入："></a>样例输入：</h2><p>FFFF</p><h2 id="样例输出："><a href="#样例输出：" class="headerlink" title="样例输出："></a>样例输出：</h2><p>65535</p><h1 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h1><p>把十进制转化为十六进制只需要把十进制数的n位乘16的n减一次方即可。把A转化为10则用了ASCII码的偏差值，A的ASCII码是65，所以只需要将ASCII码大于65的值减65加10就可得到十进制数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner in=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    String n=in.next();</span><br><span class="line">    <span class="keyword">char</span>[] arr=n.toCharArray();</span><br><span class="line">    <span class="keyword">long</span> r=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> c=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=arr.length-<span class="number">1</span>;i&gt;=<span class="number">0</span>;i--) &#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[i]&gt;=<span class="number">65</span>) &#123;</span><br><span class="line">            arr[i]=(<span class="keyword">char</span>)((<span class="keyword">int</span>)arr[i]-<span class="number">65</span>+<span class="number">10</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            arr[i]=(<span class="keyword">char</span>)(arr[i]-<span class="number">48</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        r=(<span class="keyword">long</span>) (r+arr[i]*Math.pow(<span class="number">16</span>, c));</span><br><span class="line">        c++;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(r);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题描述：&quot;&gt;&lt;a href=&quot;#问题描述：&quot; class=&quot;headerlink&quot; title=&quot;问题描述：&quot;&gt;&lt;/a&gt;问题描述：&lt;/h1&gt;&lt;p&gt;从键盘输入一个不超过8位的正的十六进制数字符串，将它转换为正的十进制数后输出。&lt;br&gt;　　注：十六进制数中的10~1</summary>
      
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="算法" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"/>
    
    <category term="java" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="练习题" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
    
    <category term="基础练习" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="进制转换" scheme="http://example.com/tags/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"/>
    
    <category term="基础" scheme="http://example.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="字符处理" scheme="http://example.com/tags/%E5%AD%97%E7%AC%A6%E5%A4%84%E7%90%86/"/>
    
    <category term="判断" scheme="http://example.com/tags/%E5%88%A4%E6%96%AD/"/>
    
  </entry>
  
  <entry>
    <title>特殊回文数</title>
    <link href="http://example.com/2021/01/18/%E7%89%B9%E6%AE%8A%E5%9B%9E%E6%96%87%E6%95%B0/"/>
    <id>http://example.com/2021/01/18/%E7%89%B9%E6%AE%8A%E5%9B%9E%E6%96%87%E6%95%B0/</id>
    <published>2021-01-18T15:33:11.440Z</published>
    <updated>2021-01-18T15:33:11.441Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h1><p>123321是一个非常特殊的数，它从左边读和从右边读是一样的。<br>　　输入一个正整数n， 编程求所有这样的五位和六位十进制数，满足各位数字之和等于n 。</p><h2 id="资源限制："><a href="#资源限制：" class="headerlink" title="资源限制："></a>资源限制：</h2><p>时间限制：1.0s  内存限制：512.0MB</p><h2 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h2><p>输入一行，包含一个正整数n。</p><h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>按从小到大的顺序输出满足条件的整数，每个整数占一行。</p><h2 id="样例输入："><a href="#样例输入：" class="headerlink" title="样例输入："></a>样例输入：</h2><p>52</p><h2 id="样例输出："><a href="#样例输出：" class="headerlink" title="样例输出："></a>样例输出：</h2><p>899998<br>989989<br>998899</p><h2 id="数据规模和约定："><a href="#数据规模和约定：" class="headerlink" title="数据规模和约定："></a>数据规模和约定：</h2><p>1&lt;=n&lt;=54。</p><h1 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner in=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> n=in.nextInt();</span><br><span class="line"><span class="keyword">int</span> num=<span class="number">10000</span>;</span><br><span class="line"><span class="keyword">while</span>(num&lt;=<span class="number">999999</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(num&lt;<span class="number">100000</span>) &#123;</span><br><span class="line"><span class="keyword">int</span> g=num%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> s=(num/<span class="number">10</span>)%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b=(num/<span class="number">100</span>)%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> q=(num/<span class="number">1000</span>)%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> w=num/<span class="number">10000</span>;</span><br><span class="line"><span class="keyword">if</span>(g==w&amp;&amp;s==q&amp;&amp;g+s+b+q+w==n) &#123;</span><br><span class="line">System.out.println(num);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> g=num%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> s=(num/<span class="number">10</span>)%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b=(num/<span class="number">100</span>)%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> q=(num/<span class="number">1000</span>)%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> w=(num/<span class="number">10000</span>)%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> sw=num/<span class="number">100000</span>;</span><br><span class="line"><span class="keyword">if</span>(g==sw&amp;&amp;s==w&amp;&amp;b==q&amp;&amp;g+s+b+q+w+sw==n) &#123;</span><br><span class="line">System.out.println(num);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题描述：&quot;&gt;&lt;a href=&quot;#问题描述：&quot; class=&quot;headerlink&quot; title=&quot;问题描述：&quot;&gt;&lt;/a&gt;问题描述：&lt;/h1&gt;&lt;p&gt;123321是一个非常特殊的数，它从左边读和从右边读是一样的。&lt;br&gt;　　输入一个正整数n， 编程求所有这样的五位和</summary>
      
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="算法" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"/>
    
    <category term="java" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="练习题" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
    
    <category term="基础练习" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="入门" scheme="http://example.com/tags/%E5%85%A5%E9%97%A8/"/>
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="循环" scheme="http://example.com/tags/%E5%BE%AA%E7%8E%AF/"/>
    
    <category term="回文数" scheme="http://example.com/tags/%E5%9B%9E%E6%96%87%E6%95%B0/"/>
    
    <category term="条件语句" scheme="http://example.com/tags/%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5/"/>
    
  </entry>
  
  <entry>
    <title>回文数</title>
    <link href="http://example.com/2021/01/18/%E5%9B%9E%E6%96%87%E6%95%B0/"/>
    <id>http://example.com/2021/01/18/%E5%9B%9E%E6%96%87%E6%95%B0/</id>
    <published>2021-01-18T15:13:57.362Z</published>
    <updated>2021-01-18T15:13:57.362Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h1><p>1221是一个非常特殊的数，它从左边读和从右边读是一样的，编程求所有这样的四位十进制数。</p><h2 id="资源限制："><a href="#资源限制：" class="headerlink" title="资源限制："></a>资源限制：</h2><p>时间限制：1.0s  内存限制：512.0MB</p><h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>按从小到大的顺序输出满足条件的四位十进制数。</p><h1 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> num=<span class="number">1000</span>;</span><br><span class="line"><span class="keyword">while</span>(num&lt;=<span class="number">9999</span>) &#123;</span><br><span class="line"><span class="keyword">int</span> g=num%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> s=(num/<span class="number">10</span>)%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b=(num/<span class="number">100</span>)%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> q=num/<span class="number">1000</span>;</span><br><span class="line"><span class="keyword">if</span>(g==q&amp;&amp;s==b) &#123;</span><br><span class="line">System.out.println(num);</span><br><span class="line">&#125;</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题描述：&quot;&gt;&lt;a href=&quot;#问题描述：&quot; class=&quot;headerlink&quot; title=&quot;问题描述：&quot;&gt;&lt;/a&gt;问题描述：&lt;/h1&gt;&lt;p&gt;1221是一个非常特殊的数，它从左边读和从右边读是一样的，编程求所有这样的四位十进制数。&lt;/p&gt;
&lt;h2 id=&quot;资</summary>
      
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="算法" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"/>
    
    <category term="java" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="练习题" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
    
    <category term="基础练习" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="入门" scheme="http://example.com/tags/%E5%85%A5%E9%97%A8/"/>
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="循环" scheme="http://example.com/tags/%E5%BE%AA%E7%8E%AF/"/>
    
    <category term="判断" scheme="http://example.com/tags/%E5%88%A4%E6%96%AD/"/>
    
    <category term="回文数" scheme="http://example.com/tags/%E5%9B%9E%E6%96%87%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>特殊的数字</title>
    <link href="http://example.com/2021/01/18/%E7%89%B9%E6%AE%8A%E7%9A%84%E6%95%B0%E5%AD%97/"/>
    <id>http://example.com/2021/01/18/%E7%89%B9%E6%AE%8A%E7%9A%84%E6%95%B0%E5%AD%97/</id>
    <published>2021-01-18T14:42:00.640Z</published>
    <updated>2021-01-19T07:33:28.609Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h1><p>153是一个非常特殊的数，它等于它的每位数字的立方和，即153=1<em>1</em>1+5<em>5</em>5+3<em>3</em>3。编程求所有满足这种条件的三位十进制数。</p><h2 id="资源限制："><a href="#资源限制：" class="headerlink" title="资源限制："></a>资源限制：</h2><p>时间限制：1.0s  内存限制：512.0MB</p><h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>按从小到大的顺序输出满足条件的三位十进制数，每个数占一行。</p><h1 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h1><p>通过分离个位、十位、百位可以很轻松得出答案</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">public class Main &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">int i&#x3D;100;</span><br><span class="line">while(i&lt;999) &#123;</span><br><span class="line">int f&#x3D;i&#x2F;100;</span><br><span class="line">int s&#x3D;(i&#x2F;10)%10;</span><br><span class="line">int t&#x3D;i%10;</span><br><span class="line">if(i&#x3D;&#x3D;f*f*f+s*s*s+t*t*t) &#123;</span><br><span class="line">System.out.println(i);</span><br><span class="line">&#125;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题描述：&quot;&gt;&lt;a href=&quot;#问题描述：&quot; class=&quot;headerlink&quot; title=&quot;问题描述：&quot;&gt;&lt;/a&gt;问题描述：&lt;/h1&gt;&lt;p&gt;153是一个非常特殊的数，它等于它的每位数字的立方和，即153=1&lt;em&gt;1&lt;/em&gt;1+5&lt;em&gt;5&lt;/em&gt;5+</summary>
      
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="算法" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"/>
    
    <category term="java" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="练习题" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
    
    <category term="基础练习" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="入门" scheme="http://example.com/tags/%E5%85%A5%E9%97%A8/"/>
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="循环" scheme="http://example.com/tags/%E5%BE%AA%E7%8E%AF/"/>
    
    <category term="判断" scheme="http://example.com/tags/%E5%88%A4%E6%96%AD/"/>
    
    <category term="数位" scheme="http://example.com/tags/%E6%95%B0%E4%BD%8D/"/>
    
  </entry>
  
  <entry>
    <title>杨辉三角</title>
    <link href="http://example.com/2021/01/18/%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92/"/>
    <id>http://example.com/2021/01/18/%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92/</id>
    <published>2021-01-18T13:10:47.515Z</published>
    <updated>2021-01-18T13:10:47.516Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h1><p>杨辉三角形又称Pascal三角形，它的第i+1行是(a+b)i的展开式的系数。</p><p>　　</p><p>它的一个重要性质是：三角形中的每个数字等于它两肩上的数字相加。</p><p>　　</p><p>下面给出了杨辉三角形的前4行：</p><p>　　</p><p>  1</p><p>　　</p><p> 1 1</p><p>　　</p><p> 1 2 1</p><p>　　</p><p>1 3 3 1</p><p>　　</p><p>给出n，输出它的前n行。</p><h2 id="资源限制："><a href="#资源限制：" class="headerlink" title="资源限制："></a>资源限制：</h2><p>时间限制：1.0s  内存限制：256.0MB</p><h2 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h2><p>输入包含一个数n。</p><h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>输出杨辉三角形的前n行。每一行从这一行的第一个数开始依次输出，中间使用一个空格分隔。请不要在前面输出多余的空格。</p><h2 id="样例输入："><a href="#样例输入：" class="headerlink" title="样例输入："></a>样例输入：</h2><p>4</p><h2 id="样例输出："><a href="#样例输出：" class="headerlink" title="样例输出："></a>样例输出：</h2><p>1<br>1 1<br>1 2 1<br>1 3 3 1</p><h2 id="数据规模与约定："><a href="#数据规模与约定：" class="headerlink" title="数据规模与约定："></a>数据规模与约定：</h2><p>1 &lt;= n &lt;= 34。</p><h1 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h1><p>首先定义一个二维数组，根据杨辉三角的规律，第n行有n个数，且每行的第一个和最后一个数都是1，第n行的第i个数字等于n-1行的i-1加上i</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner in=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> c=in.nextInt();</span><br><span class="line"><span class="keyword">int</span>[][] yh=<span class="keyword">new</span> <span class="keyword">int</span>[c][c];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;c;i++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> w=<span class="number">0</span>;w&lt;=i;w++) &#123;</span><br><span class="line"><span class="keyword">if</span>(w==<span class="number">0</span>||w==i) &#123;</span><br><span class="line">yh[i][w]=<span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">yh[i][w]=yh[i-<span class="number">1</span>][w-<span class="number">1</span>]+yh[i-<span class="number">1</span>][w];</span><br><span class="line">&#125;</span><br><span class="line">System.out.print(yh[i][w]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题描述：&quot;&gt;&lt;a href=&quot;#问题描述：&quot; class=&quot;headerlink&quot; title=&quot;问题描述：&quot;&gt;&lt;/a&gt;问题描述：&lt;/h1&gt;&lt;p&gt;杨辉三角形又称Pascal三角形，它的第i+1行是(a+b)i的展开式的系数。&lt;/p&gt;
&lt;p&gt;　　&lt;/p&gt;
&lt;p&gt;它</summary>
      
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="算法" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/"/>
    
    <category term="java" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="练习题" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
    
    <category term="基础练习" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/%E7%AE%97%E6%B3%95/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/%E7%BB%83%E4%B9%A0%E9%A2%98/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="入门" scheme="http://example.com/tags/%E5%85%A5%E9%97%A8/"/>
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="蓝桥杯" scheme="http://example.com/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="二维数组" scheme="http://example.com/tags/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
</feed>
